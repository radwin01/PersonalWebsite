{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _getCss = require('../get-css');\n\nvar _getCss2 = _interopRequireDefault(_getCss);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar propTypes = exports.propTypes = {\n  color: _propTypes2.default.string,\n  font: _propTypes2.default.string,\n  fontFamily: _propTypes2.default.string,\n  fontSize: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  fontStyle: _propTypes2.default.string,\n  fontVariant: _propTypes2.default.string,\n  fontWeight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  letterSpacing: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  lineHeight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  textAlign: _propTypes2.default.string,\n  textDecoration: _propTypes2.default.string,\n  textOverflow: _propTypes2.default.string,\n  textShadow: _propTypes2.default.string,\n  textTransform: _propTypes2.default.string,\n  whiteSpace: _propTypes2.default.string,\n  wordBreak: _propTypes2.default.string,\n  wordWrap: _propTypes2.default.string\n};\nvar propAliases = exports.propAliases = {};\nvar propValidators = exports.propValidators = {};\nvar _textAlign = {\n  className: 'txt-algn',\n  safeValue: true,\n  cssName: 'text-align',\n  jsName: 'textAlign'\n};\nvar _textDecoration = {\n  className: 'txt-deco',\n  cssName: 'text-decoration',\n  jsName: 'textDecoration'\n};\nvar _textTransform = {\n  className: 'txt-trns',\n  cssName: 'text-transform',\n  jsName: 'textTransform',\n  safeValue: true\n};\nvar _textShadow = {\n  className: 'txt-shdw',\n  cssName: 'text-shadow',\n  jsName: 'textShadow',\n  complexValue: true\n};\nvar _textOverflow = {\n  className: 'txt-ovrf',\n  cssName: 'text-overflow',\n  jsName: 'textOverflow',\n  safeValue: true\n};\nvar _color = {\n  className: 'color',\n  cssName: 'color',\n  jsName: 'color'\n};\nvar _font = {\n  className: 'fnt',\n  cssName: 'font',\n  jsName: 'font',\n  complexValue: true\n};\nvar _fontFamily = {\n  className: 'fnt-fam',\n  cssName: 'font-family',\n  jsName: 'fontFamily',\n  complexValue: true\n};\nvar _fontSize = {\n  className: 'fnt-sze',\n  cssName: 'font-size',\n  jsName: 'fontSize'\n};\nvar _fontStyle = {\n  className: 'fnt-stl',\n  cssName: 'font-style',\n  jsName: 'fontStyle',\n  safeValue: true\n};\nvar _fontVariant = {\n  className: 'f-vari',\n  cssName: 'font-variant',\n  jsName: 'fontVariant'\n};\nvar _fontWeight = {\n  className: 'f-wght',\n  cssName: 'font-weight',\n  jsName: 'fontWeight',\n  safeValue: true,\n  defaultUnit: ''\n};\nvar _lineHeight = {\n  className: 'ln-ht',\n  cssName: 'line-height',\n  jsName: 'lineHeight',\n  defaultUnit: ''\n};\nvar _wordBreak = {\n  className: 'wrd-brk',\n  cssName: 'word-break',\n  jsName: 'wordBreak',\n  safeValue: true\n};\nvar _wordWrap = {\n  className: 'wrd-wrp',\n  cssName: 'word-wrap',\n  jsName: 'wordWrap',\n  safeValue: true\n};\nvar _whiteSpace = {\n  className: 'wht-spc',\n  cssName: 'white-space',\n  jsName: 'whiteSpace',\n  safeValue: true\n};\nvar _letterSpacing = {\n  className: 'ltr-spc',\n  cssName: 'letter-spacing',\n  jsName: 'letterSpacing'\n};\nvar propEnhancers = exports.propEnhancers = {\n  color: function color(value) {\n    return (0, _getCss2.default)(_color, value);\n  },\n  font: function font(value) {\n    return (0, _getCss2.default)(_font, value);\n  },\n  fontFamily: function fontFamily(value) {\n    return (0, _getCss2.default)(_fontFamily, value);\n  },\n  fontSize: function fontSize(value) {\n    return (0, _getCss2.default)(_fontSize, value);\n  },\n  fontStyle: function fontStyle(value) {\n    return (0, _getCss2.default)(_fontStyle, value);\n  },\n  fontVariant: function fontVariant(value) {\n    return (0, _getCss2.default)(_fontVariant, value);\n  },\n  fontWeight: function fontWeight(value) {\n    return (0, _getCss2.default)(_fontWeight, value);\n  },\n  letterSpacing: function letterSpacing(value) {\n    return (0, _getCss2.default)(_letterSpacing, value);\n  },\n  lineHeight: function lineHeight(value) {\n    return (0, _getCss2.default)(_lineHeight, value);\n  },\n  textAlign: function textAlign(value) {\n    return (0, _getCss2.default)(_textAlign, value);\n  },\n  textDecoration: function textDecoration(value) {\n    return (0, _getCss2.default)(_textDecoration, value);\n  },\n  textOverflow: function textOverflow(value) {\n    return (0, _getCss2.default)(_textOverflow, value);\n  },\n  textShadow: function textShadow(value) {\n    return (0, _getCss2.default)(_textShadow, value);\n  },\n  textTransform: function textTransform(value) {\n    return (0, _getCss2.default)(_textTransform, value);\n  },\n  whiteSpace: function whiteSpace(value) {\n    return (0, _getCss2.default)(_whiteSpace, value);\n  },\n  wordBreak: function wordBreak(value) {\n    return (0, _getCss2.default)(_wordBreak, value);\n  },\n  wordWrap: function wordWrap(value) {\n    return (0, _getCss2.default)(_wordWrap, value);\n  }\n};","map":{"version":3,"sources":["../../src/enhancers/text.js"],"names":["propTypes","color","PropTypes","font","fontFamily","fontSize","fontStyle","fontVariant","fontWeight","letterSpacing","lineHeight","textAlign","textDecoration","textOverflow","textShadow","textTransform","whiteSpace","wordBreak","wordWrap","string","propAliases","propValidators","className","safeValue","cssName","jsName","complexValue","defaultUnit","propEnhancers"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport getCss from '../get-css'\n\nexport const propTypes = {\n  color: PropTypes.string,\n  font: PropTypes.string,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fontStyle: PropTypes.string,\n  fontVariant: PropTypes.string,\n  fontWeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  letterSpacing: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  lineHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  textAlign: PropTypes.string,\n  textDecoration: PropTypes.string,\n  textOverflow: PropTypes.string,\n  textShadow: PropTypes.string,\n  textTransform: PropTypes.string,\n  whiteSpace: PropTypes.string,\n  wordBreak: PropTypes.string,\n  wordWrap: PropTypes.string\n}\n\nexport const propAliases = {}\n\nexport const propValidators = {}\n\nconst textAlign = {\n  className: 'txt-algn',\n  safeValue: true,\n  cssName: 'text-align',\n  jsName: 'textAlign'\n}\nconst textDecoration = {\n  className: 'txt-deco',\n  cssName: 'text-decoration',\n  jsName: 'textDecoration'\n}\nconst textTransform = {\n  className: 'txt-trns',\n  cssName: 'text-transform',\n  jsName: 'textTransform',\n  safeValue: true\n}\nconst textShadow = {\n  className: 'txt-shdw',\n  cssName: 'text-shadow',\n  jsName: 'textShadow',\n  complexValue: true\n}\nconst textOverflow = {\n  className: 'txt-ovrf',\n  cssName: 'text-overflow',\n  jsName: 'textOverflow',\n  safeValue: true\n}\nconst color = {\n  className: 'color',\n  cssName: 'color',\n  jsName: 'color'\n}\nconst font = {\n  className: 'fnt',\n  cssName: 'font',\n  jsName: 'font',\n  complexValue: true\n}\nconst fontFamily = {\n  className: 'fnt-fam',\n  cssName: 'font-family',\n  jsName: 'fontFamily',\n  complexValue: true\n}\nconst fontSize = {\n  className: 'fnt-sze',\n  cssName: 'font-size',\n  jsName: 'fontSize'\n}\nconst fontStyle = {\n  className: 'fnt-stl',\n  cssName: 'font-style',\n  jsName: 'fontStyle',\n  safeValue: true\n}\nconst fontVariant = {\n  className: 'f-vari',\n  cssName: 'font-variant',\n  jsName: 'fontVariant'\n}\nconst fontWeight = {\n  className: 'f-wght',\n  cssName: 'font-weight',\n  jsName: 'fontWeight',\n  safeValue: true,\n  defaultUnit: ''\n}\nconst lineHeight = {\n  className: 'ln-ht',\n  cssName: 'line-height',\n  jsName: 'lineHeight',\n  defaultUnit: ''\n}\nconst wordBreak = {\n  className: 'wrd-brk',\n  cssName: 'word-break',\n  jsName: 'wordBreak',\n  safeValue: true\n}\nconst wordWrap = {\n  className: 'wrd-wrp',\n  cssName: 'word-wrap',\n  jsName: 'wordWrap',\n  safeValue: true\n}\nconst whiteSpace = {\n  className: 'wht-spc',\n  cssName: 'white-space',\n  jsName: 'whiteSpace',\n  safeValue: true\n}\nconst letterSpacing = {\n  className: 'ltr-spc',\n  cssName: 'letter-spacing',\n  jsName: 'letterSpacing'\n}\n\nexport const propEnhancers = {\n  color: value => getCss(color, value),\n  font: value => getCss(font, value),\n  fontFamily: value => getCss(fontFamily, value),\n  fontSize: value => getCss(fontSize, value),\n  fontStyle: value => getCss(fontStyle, value),\n  fontVariant: value => getCss(fontVariant, value),\n  fontWeight: value => getCss(fontWeight, value),\n  letterSpacing: value => getCss(letterSpacing, value),\n  lineHeight: value => getCss(lineHeight, value),\n  textAlign: value => getCss(textAlign, value),\n  textDecoration: value => getCss(textDecoration, value),\n  textOverflow: value => getCss(textOverflow, value),\n  textShadow: value => getCss(textShadow, value),\n  textTransform: value => getCss(textTransform, value),\n  whiteSpace: value => getCss(whiteSpace, value),\n  wordBreak: value => getCss(wordBreak, value),\n  wordWrap: value => getCss(wordWrap, value)\n}\n"]},"metadata":{},"sourceType":"script"}