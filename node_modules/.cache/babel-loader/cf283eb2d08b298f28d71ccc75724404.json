{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport ElevationStyles from './styles/elevation-styles';\nimport BorderColors from './styles/border-colors';\nimport LayerAppearances from './styles/layer-appearances';\nvar ElevationPropType = PropTypes.oneOf(ElevationStyles.map(function (_, index) {\n  return index;\n}));\nvar StringAndBoolPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.bool]);\n\nvar Pane = function (_PureComponent) {\n  _inherits(Pane, _PureComponent);\n\n  function Pane() {\n    _classCallCheck(this, Pane);\n\n    return _possibleConstructorReturn(this, (Pane.__proto__ || Object.getPrototypeOf(Pane)).apply(this, arguments));\n  }\n\n  _createClass(Pane, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          appearance = _props.appearance,\n          elevation = _props.elevation,\n          hoverElevation = _props.hoverElevation,\n          activeElevation = _props.activeElevation,\n          border = _props.border,\n          borderTop = _props.borderTop,\n          borderRight = _props.borderRight,\n          borderBottom = _props.borderBottom,\n          borderLeft = _props.borderLeft,\n          _props$css = _props.css,\n          css = _props$css === undefined ? {} : _props$css,\n          props = _objectWithoutProperties(_props, ['appearance', 'elevation', 'hoverElevation', 'activeElevation', 'border', 'borderTop', 'borderRight', 'borderBottom', 'borderLeft', 'css']);\n\n      var appearanceStyle = {};\n\n      if (Object.prototype.hasOwnProperty.call(LayerAppearances, appearance)) {\n        appearanceStyle = LayerAppearances[appearance];\n      }\n\n      var elevationStyle = void 0;\n\n      if (Number.isInteger(elevation)) {\n        elevationStyle = ElevationStyles[elevation];\n      }\n\n      var hoverElevationStyle = {};\n\n      if (Number.isInteger(hoverElevation)) {\n        hoverElevationStyle = {\n          transitionDuration: '150ms',\n          transitionProperty: 'box-shadow, transform',\n          transitionTimingFunction: 'cubic-bezier(0.0, 0.0, 0.2, 1)',\n          ':hover': _extends({}, css[':hover'] || {}, {\n            transform: 'translateY(-2px)',\n            boxShadow: ElevationStyles[hoverElevation]\n          })\n        };\n      }\n\n      var activeElevationStyle = {};\n\n      if (Number.isInteger(activeElevation)) {\n        activeElevationStyle = {\n          ':active': _extends({}, css[':active'] || {}, {\n            transform: 'translateY(-1px)',\n            boxShadow: ElevationStyles[activeElevation]\n          })\n        };\n      }\n\n      var _map = [borderTop, borderRight, borderBottom, borderLeft].map(function (borderSideProperty) {\n        if (Object.prototype.hasOwnProperty.call(BorderColors, borderSideProperty)) {\n          return '1px solid ' + BorderColors[borderSideProperty];\n        } else if (borderSideProperty === true) {\n          // Use default, which is now muted, border color when explicitly a true boolean\n          return '1px solid ' + BorderColors.muted;\n        } else if (Object.prototype.hasOwnProperty.call(BorderColors, border)) {\n          return '1px solid ' + BorderColors[border];\n        } else if (border === true) {\n          return '1px solid ' + BorderColors.muted;\n        }\n\n        return borderSideProperty;\n      }),\n          _map2 = _slicedToArray(_map, 4),\n          _borderTop = _map2[0],\n          _borderRight = _map2[1],\n          _borderBottom = _map2[2],\n          _borderLeft = _map2[3];\n\n      return React.createElement(Box, _extends({\n        borderTop: _borderTop,\n        borderRight: _borderRight,\n        borderBottom: _borderBottom,\n        borderLeft: _borderLeft,\n        boxShadow: elevationStyle\n      }, appearanceStyle, {\n        css: _extends({}, css, hoverElevationStyle, activeElevationStyle)\n      }, props));\n    }\n  }]);\n\n  return Pane;\n}(PureComponent);\n\nPane.propTypes = _extends({}, Box.propTypes, {\n  appearance: PropTypes.oneOf(Object.keys(LayerAppearances)),\n  elevation: ElevationPropType,\n  hoverElevation: ElevationPropType,\n  activeElevation: ElevationPropType,\n  // Enable to set a boolean for a default border\n  borderTop: StringAndBoolPropType,\n  borderRight: StringAndBoolPropType,\n  borderBottom: StringAndBoolPropType,\n  borderLeft: StringAndBoolPropType\n});\nexport default Pane;","map":{"version":3,"sources":["../../../src/layers/src/Pane.js"],"names":["ElevationPropType","StringAndBoolPropType","PropTypes","Pane","PureComponent","propTypes","Box","appearance","Object","elevation","hoverElevation","activeElevation","borderTop","borderRight","borderBottom","borderLeft","border","css","props","appearanceStyle","LayerAppearances","elevationStyle","Number","ElevationStyles","hoverElevationStyle","transitionDuration","transitionProperty","transitionTimingFunction","transform","boxShadow","activeElevationStyle","_borderTop","_borderRight","_borderBottom","_borderLeft","BorderColors","borderSideProperty"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport ElevationStyles from './styles/elevation-styles'\nimport BorderColors from './styles/border-colors'\nimport LayerAppearances from './styles/layer-appearances'\n\nconst ElevationPropType = PropTypes.oneOf(\n  ElevationStyles.map((_, index) => index)\n)\n\nconst StringAndBoolPropType = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.bool\n])\n\nexport default class Pane extends PureComponent {\n  static propTypes = {\n    ...Box.propTypes,\n\n    appearance: PropTypes.oneOf(Object.keys(LayerAppearances)),\n\n    elevation: ElevationPropType,\n    hoverElevation: ElevationPropType,\n    activeElevation: ElevationPropType,\n\n    // Enable to set a boolean for a default border\n    borderTop: StringAndBoolPropType,\n    borderRight: StringAndBoolPropType,\n    borderBottom: StringAndBoolPropType,\n    borderLeft: StringAndBoolPropType\n  }\n\n  render() {\n    const {\n      appearance,\n\n      elevation,\n      hoverElevation,\n      activeElevation,\n\n      border,\n      borderTop,\n      borderRight,\n      borderBottom,\n      borderLeft,\n\n      css = {},\n      ...props\n    } = this.props\n\n    let appearanceStyle = {}\n    if (Object.prototype.hasOwnProperty.call(LayerAppearances, appearance)) {\n      appearanceStyle = LayerAppearances[appearance]\n    }\n\n    let elevationStyle\n    if (Number.isInteger(elevation)) {\n      elevationStyle = ElevationStyles[elevation]\n    }\n\n    let hoverElevationStyle = {}\n    if (Number.isInteger(hoverElevation)) {\n      hoverElevationStyle = {\n        transitionDuration: '150ms',\n        transitionProperty: 'box-shadow, transform',\n        transitionTimingFunction: `cubic-bezier(0.0, 0.0, 0.2, 1)`,\n        ':hover': {\n          ...(css[':hover'] || {}),\n          transform: 'translateY(-2px)',\n          boxShadow: ElevationStyles[hoverElevation]\n        }\n      }\n    }\n\n    let activeElevationStyle = {}\n    if (Number.isInteger(activeElevation)) {\n      activeElevationStyle = {\n        ':active': {\n          ...(css[':active'] || {}),\n          transform: 'translateY(-1px)',\n          boxShadow: ElevationStyles[activeElevation]\n        }\n      }\n    }\n\n    const [_borderTop, _borderRight, _borderBottom, _borderLeft] = [\n      borderTop,\n      borderRight,\n      borderBottom,\n      borderLeft\n    ].map(borderSideProperty => {\n      if (\n        Object.prototype.hasOwnProperty.call(BorderColors, borderSideProperty)\n      ) {\n        return `1px solid ${BorderColors[borderSideProperty]}`\n      } else if (borderSideProperty === true) {\n        // Use default, which is now muted, border color when explicitly a true boolean\n        return `1px solid ${BorderColors.muted}`\n      } else if (Object.prototype.hasOwnProperty.call(BorderColors, border)) {\n        return `1px solid ${BorderColors[border]}`\n      } else if (border === true) {\n        return `1px solid ${BorderColors.muted}`\n      }\n\n      return borderSideProperty\n    })\n\n    return (\n      <Box\n        borderTop={_borderTop}\n        borderRight={_borderRight}\n        borderBottom={_borderBottom}\n        borderLeft={_borderLeft}\n        boxShadow={elevationStyle}\n        {...appearanceStyle}\n        css={{\n          ...css,\n          ...hoverElevationStyle,\n          ...activeElevationStyle\n        }}\n        {...props}\n      />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}