{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport { TableRow, TextTableCell } from '../../table';\n\nvar CheckIcon = function CheckIcon(_ref) {\n  var _ref$fill = _ref.fill,\n      fill = _ref$fill === undefined ? 'currentColor' : _ref$fill,\n      props = _objectWithoutProperties(_ref, ['fill']);\n\n  return React.createElement('svg', _extends({\n    width: 10,\n    height: 7,\n    viewBox: '0 0 10 7'\n  }, props), React.createElement('path', {\n    fill: fill,\n    fillRule: 'evenodd',\n    d: 'M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z'\n  }));\n};\n\nCheckIcon.propTypes = {\n  fill: PropTypes.string\n};\n\nvar Option = function (_PureComponent) {\n  _inherits(Option, _PureComponent);\n\n  function Option() {\n    _classCallCheck(this, Option);\n\n    return _possibleConstructorReturn(this, (Option.__proto__ || Object.getPrototypeOf(Option)).apply(this, arguments));\n  }\n\n  _createClass(Option, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          label = _props.label,\n          onSelect = _props.onSelect,\n          isHighlighted = _props.isHighlighted,\n          isSelected = _props.isSelected,\n          style = _props.style,\n          height = _props.height,\n          props = _objectWithoutProperties(_props, ['label', 'onSelect', 'isHighlighted', 'isSelected', 'style', 'height']);\n\n      return React.createElement(TableRow, _extends({\n        isSelectable: true,\n        isHighlighted: isHighlighted,\n        onSelect: onSelect,\n        isSelected: isSelected,\n        style: style,\n        display: 'flex',\n        alignItems: 'center'\n      }, props), React.createElement(Pane, {\n        paddingLeft: 11,\n        paddingRight: 8,\n        marginTop: -5,\n        opacity: isSelected ? 1 : 0,\n        flexGrow: 0\n      }, React.createElement(CheckIcon, null)), React.createElement(TextTableCell, _extends({\n        height: height\n      }, isSelected ? {\n        textProps: {\n          color: 'inherit'\n        }\n      } : {}, {\n        paddingLeft: 0,\n        borderRight: null,\n        flex: 1\n      }), label));\n    }\n  }]);\n\n  return Option;\n}(PureComponent);\n\nOption.propTypes = {\n  label: PropTypes.string,\n  style: PropTypes.any,\n  height: PropTypes.number,\n  onSelect: PropTypes.func,\n  isHighlighted: PropTypes.bool,\n  isSelected: PropTypes.bool\n};\nexport default Option;","map":{"version":3,"sources":["../../../src/select-menu/src/Option.js"],"names":["CheckIcon","fill","props","PropTypes","string","Option","PureComponent","propTypes","label","style","height","onSelect","isHighlighted","isSelected","bool","textProps","color"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Pane } from '../../layers'\nimport { TableRow, TextTableCell } from '../../table'\n\nconst CheckIcon = ({ fill = 'currentColor', ...props }) => (\n  <svg width={10} height={7} viewBox=\"0 0 10 7\" {...props}>\n    <path\n      fill={fill}\n      fillRule=\"evenodd\"\n      d=\"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n    />\n  </svg>\n)\n\nCheckIcon.propTypes = {\n  fill: PropTypes.string\n}\n\nexport default class Option extends PureComponent {\n  static propTypes = {\n    label: PropTypes.string,\n    style: PropTypes.any,\n    height: PropTypes.number,\n    onSelect: PropTypes.func,\n    isHighlighted: PropTypes.bool,\n    isSelected: PropTypes.bool\n  }\n\n  render() {\n    const {\n      label,\n      onSelect,\n      isHighlighted,\n      isSelected,\n      style,\n      height,\n      ...props\n    } = this.props\n\n    return (\n      <TableRow\n        isSelectable\n        isHighlighted={isHighlighted}\n        onSelect={onSelect}\n        isSelected={isSelected}\n        style={style}\n        display=\"flex\"\n        alignItems=\"center\"\n        {...props}\n      >\n        <Pane\n          paddingLeft={11}\n          paddingRight={8}\n          marginTop={-5}\n          opacity={isSelected ? 1 : 0}\n          flexGrow={0}\n        >\n          <CheckIcon />\n        </Pane>\n        <TextTableCell\n          height={height}\n          {...(isSelected\n            ? {\n                textProps: {\n                  color: 'inherit'\n                }\n              }\n            : {})}\n          paddingLeft={0}\n          borderRight={null}\n          flex={1}\n        >\n          {label}\n        </TextTableCell>\n      </TableRow>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}