{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { colors } from '../../colors';\nimport { Text } from '../../typography';\n\nvar TooltipStateless = function (_PureComponent) {\n  _inherits(TooltipStateless, _PureComponent);\n\n  function TooltipStateless() {\n    _classCallCheck(this, TooltipStateless);\n\n    return _possibleConstructorReturn(this, (TooltipStateless.__proto__ || Object.getPrototypeOf(TooltipStateless)).apply(this, arguments));\n  }\n\n  _createClass(TooltipStateless, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          props = _objectWithoutProperties(_props, ['children']);\n\n      var child = void 0;\n\n      if (typeof children === 'string') {\n        child = React.createElement(Text, {\n          display: 'block',\n          lineHeight: '1.25em',\n          color: 'white',\n          size: 400\n        }, children);\n      } else {\n        child = children;\n      }\n\n      return React.createElement(Box, _extends({}, TooltipStateless.styles, props), child);\n    }\n  }]);\n\n  return TooltipStateless;\n}(PureComponent);\n\nTooltipStateless.propTypes = {\n  children: PropTypes.node\n};\nTooltipStateless.styles = {\n  backgroundColor: colors.neutral['400A'],\n  borderRadius: 3,\n  paddingX: 8,\n  paddingY: 4,\n  maxWidth: 240\n};\nexport default TooltipStateless;","map":{"version":3,"sources":["../../../src/tooltip/src/TooltipStateless.js"],"names":["TooltipStateless","PureComponent","propTypes","children","PropTypes","node","styles","backgroundColor","colors","borderRadius","paddingX","paddingY","maxWidth","props","child"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,GAAA,MAAA,QAAA;AACA,SAAA,MAAA,QAAA,cAAA;AACA,SAAA,IAAA,QAAA,kBAAA;;IAEqBA,gB;;;;;;;;;;;6BAaV;AAAA,UAAA,MAAA,GACwB,KADxB,KAAA;AAAA,UACCG,QADD,GAAA,MAAA,CAAA,QAAA;AAAA,UACcU,KADd,GAAA,wBAAA,CAAA,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA;;AAEP,UAAIC,KAAAA,GAAAA,KAAJ,CAAA;;AACA,UAAI,OAAA,QAAA,KAAJ,QAAA,EAAkC;AAChCA,QAAAA,KAAAA,GACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAM,UAAA,OAAA,EAAN,OAAA;AAAsB,UAAA,UAAA,EAAtB,QAAA;AAA0C,UAAA,KAAA,EAA1C,OAAA;AAAwD,UAAA,IAAA,EAAxD;AAAA,SAAA,EACGX,QADH,CADFW;AADF,OAAA,MAMO;AACLA,QAAAA,KAAAA,GAAAA,QAAAA;AACD;;AACD,aACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAASd,gBAAAA,CAAT,MAAA,EAAA,KAAA,CAAA,EACGc,KADH,CADF;AAKD;;;;EA9B2Cb,a;;AAAzBD,gB,CACZE,SADYF,GACA;AACjBG,EAAAA,QAAAA,EAAUC,SAAAA,CAAUC;AADH,CADAL;AAAAA,gB,CAKZM,MALYN,GAKH;AACdO,EAAAA,eAAAA,EAAiBC,MAAAA,CAAAA,OAAAA,CADH,MACGA,CADH;AAEdC,EAAAA,YAAAA,EAFc,CAAA;AAGdC,EAAAA,QAAAA,EAHc,CAAA;AAIdC,EAAAA,QAAAA,EAJc,CAAA;AAKdC,EAAAA,QAAAA,EAAU;AALI,CALGZ;eAAAA,gB","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { colors } from '../../colors'\nimport { Text } from '../../typography'\n\nexport default class TooltipStateless extends PureComponent {\n  static propTypes = {\n    children: PropTypes.node\n  }\n\n  static styles = {\n    backgroundColor: colors.neutral['400A'],\n    borderRadius: 3,\n    paddingX: 8,\n    paddingY: 4,\n    maxWidth: 240\n  }\n\n  render() {\n    const { children, ...props } = this.props\n    let child\n    if (typeof children === 'string') {\n      child = (\n        <Text display=\"block\" lineHeight=\"1.25em\" color=\"white\" size={400}>\n          {children}\n        </Text>\n      )\n    } else {\n      child = children\n    }\n    return (\n      <Box {...TooltipStateless.styles} {...props}>\n        {child}\n      </Box>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}