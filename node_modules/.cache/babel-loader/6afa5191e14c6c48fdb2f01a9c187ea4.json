{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { spacing, dimensions, position, layout } from 'ui-box';\nimport { colors } from '../../colors';\nimport { Pane } from '../../layers';\nimport { Text } from '../../typography';\nimport { CheckCircleIcon, DangerIcon, QuestionIcon, WarningIcon } from '../../icons';\n\nvar getColorForType = function getColorForType(type) {\n  switch (type) {\n    case 'success':\n      return colors.green['500'];\n\n    case 'question':\n    default:\n      return colors.blue['500'];\n\n    case 'danger':\n      return colors.red['500'];\n\n    case 'warning':\n      return colors.yellow['500'];\n  }\n};\n\nvar getIconForType = function getIconForType(type) {\n  var iconProps = {\n    size: 22,\n    iconSize: 14,\n    color: getColorForType(type)\n  };\n\n  switch (type) {\n    case 'success':\n      return React.createElement(CheckCircleIcon, iconProps);\n\n    case 'question':\n    default:\n      return React.createElement(QuestionIcon, iconProps);\n\n    case 'danger':\n      return React.createElement(DangerIcon, iconProps);\n\n    case 'warning':\n      return React.createElement(WarningIcon, iconProps);\n  }\n};\n\nvar getStyle = function getStyle(_ref) {\n  var type = _ref.type;\n  return {\n    '&:before': {\n      content: '\"\"',\n      width: 3,\n      height: '100%',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      backgroundColor: getColorForType(type)\n    }\n  };\n};\n\nvar AlertAppearances = {\n  default: {\n    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A']\n  },\n  card: {\n    elevation: 1,\n    borderRadius: 3\n  }\n};\n\nvar Alert = function (_PureComponent) {\n  _inherits(Alert, _PureComponent);\n\n  function Alert() {\n    _classCallCheck(this, Alert);\n\n    return _possibleConstructorReturn(this, (Alert.__proto__ || Object.getPrototypeOf(Alert)).apply(this, arguments));\n  }\n\n  _createClass(Alert, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          title = _props.title,\n          type = _props.type,\n          hasTrim = _props.hasTrim,\n          hasIcon = _props.hasIcon,\n          children = _props.children,\n          appearance = _props.appearance,\n          props = _objectWithoutProperties(_props, ['title', 'type', 'hasTrim', 'hasIcon', 'children', 'appearance']);\n\n      var style = hasTrim && type === 'default' ? {} : getStyle({\n        type: type\n      });\n      var appearanceProps = AlertAppearances[appearance];\n      return React.createElement(Pane, _extends({\n        role: 'alert',\n        backgroundColor: 'white',\n        overflow: 'hidden',\n        position: 'relative',\n        display: 'flex',\n        paddingY: 12,\n        paddingX: 16,\n        css: style\n      }, appearanceProps, props), hasIcon && type !== 'default' && React.createElement(Pane, {\n        marginRight: 8\n      }, getIconForType(type)), React.createElement(Pane, null, React.createElement(Text, {\n        is: 'h4',\n        fontWeight: 600,\n        size: 400,\n        marginTop: 0,\n        marginBottom: 0\n      }, title), typeof children === 'string' ? React.createElement(Text, {\n        size: 400,\n        color: 'muted'\n      }, children) : children));\n    }\n  }]);\n\n  return Alert;\n}(PureComponent);\n\nAlert.propTypes = _extends({}, spacing.propTypes, position.propTypes, layout.propTypes, dimensions.propTypes, {\n  /**\n   * The content of the alert. When a string is passed it is wrapped in a `<Text size={400} />` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * The type of the alert.\n   */\n  type: PropTypes.oneOf(['default', 'success', 'warning', 'danger', 'question']),\n\n  /**\n   * The title of the alert.\n   */\n  title: PropTypes.node,\n\n  /**\n   * When true, show a border on the left matching the type.\n   */\n  hasTrim: PropTypes.bool,\n\n  /**\n   * When true, show a icon on the left matching the type,\n   */\n  hasIcon: PropTypes.bool,\n\n  /**\n   * The appearance of the alert.\n   */\n  appearance: PropTypes.oneOf(['default', 'card'])\n});\nAlert.defaultProps = {\n  type: 'default',\n  hasTrim: true,\n  hasIcon: true,\n  appearance: 'default'\n};\nexport default Alert;","map":{"version":3,"sources":["../../../src/alert/src/Alert.js"],"names":["getColorForType","colors","getIconForType","iconProps","size","iconSize","color","getStyle","type","content","width","height","position","top","left","backgroundColor","AlertAppearances","default","boxShadow","card","elevation","borderRadius","Alert","PureComponent","propTypes","spacing","layout","dimensions","children","PropTypes","title","node","hasTrim","bool","hasIcon","appearance","defaultProps","props","style","appearanceProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { spacing, dimensions, position, layout } from 'ui-box'\nimport { colors } from '../../colors'\nimport { Pane } from '../../layers'\nimport { Text } from '../../typography'\nimport {\n  CheckCircleIcon,\n  DangerIcon,\n  QuestionIcon,\n  WarningIcon\n} from '../../icons'\n\nconst getColorForType = type => {\n  switch (type) {\n    case 'success':\n      return colors.green['500']\n    case 'question':\n    default:\n      return colors.blue['500']\n    case 'danger':\n      return colors.red['500']\n    case 'warning':\n      return colors.yellow['500']\n  }\n}\n\nconst getIconForType = type => {\n  const iconProps = {\n    size: 22,\n    iconSize: 14,\n    color: getColorForType(type)\n  }\n\n  switch (type) {\n    case 'success':\n      return <CheckCircleIcon {...iconProps} />\n    case 'question':\n    default:\n      return <QuestionIcon {...iconProps} />\n    case 'danger':\n      return <DangerIcon {...iconProps} />\n    case 'warning':\n      return <WarningIcon {...iconProps} />\n  }\n}\n\nconst getStyle = ({ type }) => ({\n  '&:before': {\n    content: '\"\"',\n    width: 3,\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    backgroundColor: getColorForType(type)\n  }\n})\n\nconst AlertAppearances = {\n  default: {\n    boxShadow: `inset 0 0 0 1px ${colors.neutral['20A']}`\n  },\n  card: {\n    elevation: 1,\n    borderRadius: 3\n  }\n}\n\nexport default class Alert extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes some Box APIs.\n     */\n    ...spacing.propTypes,\n    ...position.propTypes,\n    ...layout.propTypes,\n    ...dimensions.propTypes,\n\n    /**\n     * The content of the alert. When a string is passed it is wrapped in a `<Text size={400} />` component.\n     */\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n    /**\n     * The type of the alert.\n     */\n    type: PropTypes.oneOf([\n      'default',\n      'success',\n      'warning',\n      'danger',\n      'question'\n    ]),\n\n    /**\n     * The title of the alert.\n     */\n    title: PropTypes.node,\n\n    /**\n     * When true, show a border on the left matching the type.\n     */\n    hasTrim: PropTypes.bool,\n\n    /**\n     * When true, show a icon on the left matching the type,\n     */\n    hasIcon: PropTypes.bool,\n\n    /**\n     * The appearance of the alert.\n     */\n    appearance: PropTypes.oneOf(['default', 'card'])\n  }\n\n  static defaultProps = {\n    type: 'default',\n    hasTrim: true,\n    hasIcon: true,\n    appearance: 'default'\n  }\n\n  render() {\n    const {\n      title,\n      type,\n      hasTrim,\n      hasIcon,\n      children,\n      appearance,\n      ...props\n    } = this.props\n\n    const style = hasTrim && type === 'default' ? {} : getStyle({ type })\n\n    const appearanceProps = AlertAppearances[appearance]\n\n    return (\n      <Pane\n        role=\"alert\"\n        backgroundColor=\"white\"\n        overflow=\"hidden\"\n        position=\"relative\"\n        display=\"flex\"\n        paddingY={12}\n        paddingX={16}\n        css={style}\n        {...appearanceProps}\n        {...props}\n      >\n        {hasIcon &&\n          type !== 'default' && (\n            <Pane marginRight={8}>{getIconForType(type)}</Pane>\n          )}\n        <Pane>\n          <Text\n            is=\"h4\"\n            fontWeight={600}\n            size={400}\n            marginTop={0}\n            marginBottom={0}\n          >\n            {title}\n          </Text>\n          {typeof children === 'string' ? (\n            <Text size={400} color=\"muted\">\n              {children}\n            </Text>\n          ) : (\n            children\n          )}\n        </Pane>\n      </Pane>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}