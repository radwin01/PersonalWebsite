{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pane } from '../../layers';\nimport { selectableRowStyle } from '../../shared-styles';\n\nvar TableRow = function (_PureComponent) {\n  _inherits(TableRow, _PureComponent);\n\n  function TableRow() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TableRow);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TableRow.__proto__ || Object.getPrototypeOf(TableRow)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      _this.props.onClick(e);\n\n      if (_this.props.isSelectable) {\n        _this.props.onSelect();\n      }\n    }, _this.handleKeyPress = function (e) {\n      if (_this.props.isSelectable) {\n        if (e.key === 'Enter' || e.key === ' ') {\n          _this.props.onSelect();\n\n          e.preventDefault();\n        }\n      }\n\n      _this.props.onKeyPress(e);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TableRow, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          onClick = _props.onClick,\n          onKeyPress = _props.onKeyPress,\n          isHighlighted = _props.isHighlighted,\n          isSelectable = _props.isSelectable,\n          isSelected = _props.isSelected,\n          _props$css = _props.css,\n          css = _props$css === undefined ? {} : _props$css,\n          props = _objectWithoutProperties(_props, ['children', 'onClick', 'onKeyPress', 'isHighlighted', 'isSelectable', 'isSelected', 'css']);\n\n      return React.createElement(Pane, _extends({\n        display: 'flex'\n      }, isSelectable ? {\n        'aria-selected': isHighlighted,\n        'aria-current': isSelected,\n        css: _extends({}, selectableRowStyle, css),\n        tabIndex: 0\n      } : {\n        css: css\n      }, {\n        onClick: this.handleClick,\n        onKeyPress: this.handleKeyPress\n      }, props), children);\n    }\n  }]);\n\n  return TableRow;\n}(PureComponent);\n\nTableRow.propTypes = _extends({}, Pane.propTypes, {\n  /**\n   * Function that is called on click and enter/space keypress.\n   */\n  onSelect: PropTypes.func,\n\n  /**\n   * Makes the TableRow selectable.\n   */\n  isSelectable: PropTypes.bool,\n\n  /**\n   * Makes the TableRow selected.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * Manually set the TableRow to be highlighted.\n   */\n  isHighlighted: PropTypes.bool\n});\nTableRow.defaultProps = {\n  onClick: function onClick() {},\n  onSelect: function onSelect() {},\n  onKeyPress: function onKeyPress() {}\n};\nexport default TableRow;","map":{"version":3,"sources":["../../../src/table/src/TableRow.js"],"names":["TableRow","PureComponent","propTypes","Pane","onSelect","PropTypes","func","isSelectable","bool","isSelected","isHighlighted","defaultProps","onClick","onKeyPress","handleClick","handleKeyPress","e","children","css","props","tabIndex"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,SAAA,IAAA,QAAA,cAAA;AACA,SAAA,kBAAA,QAAA,qBAAA;;IAEqBA,Q;;;;;;;;;;;;;;0LAkCnBc,W,GAAc,UAAA,CAAA,EAAK;AACjB,MAAA,KAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA;;AACA,UAAI,KAAA,CAAA,KAAA,CAAJ,YAAA,EAA6B;AAC3B,QAAA,KAAA,CAAA,KAAA,CAAA,QAAA;AACD;aAGHC,c,GAAiB,UAAA,CAAA,EAAK;AACpB,UAAI,KAAA,CAAA,KAAA,CAAJ,YAAA,EAA6B;AAC3B,YAAIC,CAAAA,CAAAA,GAAAA,KAAAA,OAAAA,IAAqBA,CAAAA,CAAAA,GAAAA,KAAzB,GAAA,EAAwC;AACtC,UAAA,KAAA,CAAA,KAAA,CAAA,QAAA;;AACAA,UAAAA,CAAAA,CAAAA,cAAAA;AACD;AACF;;AAED,MAAA,KAAA,CAAA,KAAA,CAAA,UAAA,CAAA,CAAA;;;;;;6BAGO;AAAA,UAAA,MAAA,GAUH,KAVG,KAAA;AAAA,UAELC,QAFK,GAAA,MAAA,CAAA,QAAA;AAAA,UAGLL,OAHK,GAAA,MAAA,CAAA,OAAA;AAAA,UAILC,UAJK,GAAA,MAAA,CAAA,UAAA;AAAA,UAKLH,aALK,GAAA,MAAA,CAAA,aAAA;AAAA,UAMLH,YANK,GAAA,MAAA,CAAA,YAAA;AAAA,UAOLE,UAPK,GAAA,MAAA,CAAA,UAAA;AAAA,UAAA,UAAA,GAAA,MAAA,CAAA,GAAA;AAAA,UAQLS,GARK,GAAA,UAAA,KAAA,SAAA,GAAA,EAAA,GAAA,UAAA;AAAA,UASFC,KATE,GAAA,wBAAA,CAAA,MAAA,EAAA,CAAA,UAAA,EAAA,SAAA,EAAA,YAAA,EAAA,eAAA,EAAA,cAAA,EAAA,YAAA,EAAA,KAAA,CAAA,CAAA;;AAYP,aACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,QAAA,OAAA,EAAQ;AADV,OAAA,EAEO,YAAA,GACD;AACE,yBADF,aAAA;AAEE,wBAFF,UAAA;AAGED,QAAAA,GAAAA,EAAAA,QAAAA,CAAAA,EAAAA,EAAAA,kBAAAA,EAHF,GAGEA,CAHF;AAIEE,QAAAA,QAAAA,EAAU;AAJZ,OADC,GAOD;AAAEF,QAAAA,GAAAA,EATR;AASM,OATN,EAAA;AAUE,QAAA,OAAA,EAAS,KAVX,WAAA;AAWE,QAAA,UAAA,EAAY,KAAKH;AAXnB,OAAA,EAAA,KAAA,CAAA,EAcGE,QAdH,CADF;AAkBD;;;;EAlFmChB,a;;AAAjBD,Q,CACZE,SADYF,G,aAKdG,IAAAA,CAAKD,S;AAER;;;AAGAE,EAAAA,QAAAA,EAAUC,SAAAA,CAAUC,I;;AAEpB;;;AAGAC,EAAAA,YAAAA,EAAcF,SAAAA,CAAUG,I;;AAExB;;;AAGAC,EAAAA,UAAAA,EAAYJ,SAAAA,CAAUG,I;;AAEtB;;;AAGAE,EAAAA,aAAAA,EAAeL,SAAAA,CAAUG;EAzBRR;AAAAA,Q,CA4BZW,YA5BYX,GA4BG;AACpBY,EAAAA,OAAAA,EAAS,SAAA,OAAA,GAAM,CADK,CAAA;AAEpBR,EAAAA,QAAAA,EAAU,SAAA,QAAA,GAAM,CAFI,CAAA;AAGpBS,EAAAA,UAAAA,EAAY,SAAA,UAAA,GAAM,CAAE;AAHA,CA5BHb;eAAAA,Q","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Pane } from '../../layers'\nimport { selectableRowStyle } from '../../shared-styles'\n\nexport default class TableRow extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes the Pane component as the base.\n     */\n    ...Pane.propTypes,\n\n    /**\n     * Function that is called on click and enter/space keypress.\n     */\n    onSelect: PropTypes.func,\n\n    /**\n     * Makes the TableRow selectable.\n     */\n    isSelectable: PropTypes.bool,\n\n    /**\n     * Makes the TableRow selected.\n     */\n    isSelected: PropTypes.bool,\n\n    /**\n     * Manually set the TableRow to be highlighted.\n     */\n    isHighlighted: PropTypes.bool\n  }\n\n  static defaultProps = {\n    onClick: () => {},\n    onSelect: () => {},\n    onKeyPress: () => {}\n  }\n\n  handleClick = e => {\n    this.props.onClick(e)\n    if (this.props.isSelectable) {\n      this.props.onSelect()\n    }\n  }\n\n  handleKeyPress = e => {\n    if (this.props.isSelectable) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        this.props.onSelect()\n        e.preventDefault()\n      }\n    }\n\n    this.props.onKeyPress(e)\n  }\n\n  render() {\n    const {\n      children,\n      onClick, // Filter out onClick\n      onKeyPress, // Filter out onKeyPress\n      isHighlighted,\n      isSelectable,\n      isSelected,\n      css = {},\n      ...props\n    } = this.props\n\n    return (\n      <Pane\n        display=\"flex\"\n        {...(isSelectable\n          ? {\n              'aria-selected': isHighlighted,\n              'aria-current': isSelected,\n              css: { ...selectableRowStyle, ...css },\n              tabIndex: 0\n            }\n          : { css })}\n        onClick={this.handleClick}\n        onKeyPress={this.handleKeyPress}\n        {...props}\n      >\n        {children}\n      </Pane>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}