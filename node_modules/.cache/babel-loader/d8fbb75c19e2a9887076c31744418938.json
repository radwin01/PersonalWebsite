{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { Button } from '../../buttons';\nimport { TextInput } from '../../text-input';\nexport var CLASS_PREFIX = 'evergreen-file-picker';\n\nvar FilePicker = function (_PureComponent) {\n  _inherits(FilePicker, _PureComponent);\n\n  function FilePicker() {\n    _classCallCheck(this, FilePicker);\n\n    var _this = _possibleConstructorReturn(this, (FilePicker.__proto__ || Object.getPrototypeOf(FilePicker)).call(this));\n\n    _this.fileInputRef = function (node) {\n      _this.fileInput = node;\n    };\n\n    _this.handleFileChange = function (e) {\n      var onChange = _this.props.onChange; // Firefox returns the same array instance each time for some reason\n\n      var files = [].concat(_toConsumableArray(e.target.files));\n\n      _this.setState({\n        files: files\n      });\n\n      if (onChange) {\n        onChange(files);\n      }\n    };\n\n    _this.handleButtonClick = function () {\n      _this.fileInput.click();\n    };\n\n    _this.state = {\n      files: []\n    };\n    return _this;\n  }\n\n  _createClass(FilePicker, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          name = _props.name,\n          accept = _props.accept,\n          required = _props.required,\n          multiple = _props.multiple,\n          disabled = _props.disabled,\n          capture = _props.capture,\n          height = _props.height,\n          onChange = _props.onChange,\n          props = _objectWithoutProperties(_props, ['name', 'accept', 'required', 'multiple', 'disabled', 'capture', 'height', 'onChange']);\n\n      var files = this.state.files;\n      var inputValue = void 0;\n\n      if (files.length === 0) {\n        inputValue = '';\n      } else if (files.length === 1) {\n        inputValue = files[0].name;\n      } else {\n        inputValue = files.length + ' files';\n      }\n\n      var buttonText = void 0;\n\n      if (files.length === 0) {\n        buttonText = 'Select file';\n      } else if (files.length === 1) {\n        buttonText = 'Replace file';\n      } else {\n        buttonText = 'Replace files';\n      }\n\n      return React.createElement(Box, _extends({\n        display: 'flex',\n        className: CLASS_PREFIX + '-root'\n      }, props), React.createElement(Box, {\n        innerRef: this.fileInputRef,\n        className: CLASS_PREFIX + '-file-input',\n        is: 'input',\n        type: 'file',\n        name: name,\n        accept: accept,\n        required: required,\n        multiple: multiple,\n        disabled: disabled,\n        capture: capture,\n        onChange: this.handleFileChange,\n        display: 'none'\n      }), React.createElement(TextInput, {\n        className: CLASS_PREFIX + '-text-input',\n        readOnly: true,\n        value: inputValue,\n        placeholder: 'Select a file to upload\\u2026' // There's a weird specifity issue when there's two differently sized inputs on the page\n        ,\n        borderTopRightRadius: '0 !important',\n        borderBottomRightRadius: '0 !important',\n        height: height,\n        flex: 1,\n        textOverflow: 'ellipsis'\n      }), React.createElement(Button, {\n        className: CLASS_PREFIX + '-button',\n        onClick: this.handleButtonClick,\n        disabled: disabled,\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0,\n        height: height,\n        flexShrink: 0\n      }, buttonText));\n    }\n  }]);\n\n  return FilePicker;\n}(PureComponent);\n\nFilePicker.propTypes = {\n  name: PropTypes.string,\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  required: PropTypes.bool,\n  multiple: PropTypes.bool,\n  disabled: PropTypes.bool,\n  capture: PropTypes.bool,\n  height: PropTypes.number,\n  onChange: PropTypes.func\n};\nexport default FilePicker;","map":{"version":3,"sources":["../../../src/file-picker/src/FilePicker.js"],"names":["CLASS_PREFIX","FilePicker","PureComponent","propTypes","name","PropTypes","accept","required","multiple","disabled","capture","height","onChange","func","files","props","inputValue","buttonText","e"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { Button } from '../../buttons'\nimport { TextInput } from '../../text-input'\n\nexport const CLASS_PREFIX = 'evergreen-file-picker'\n\nexport default class FilePicker extends PureComponent {\n  static propTypes = {\n    name: PropTypes.string,\n    accept: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string)\n    ]),\n    required: PropTypes.bool,\n    multiple: PropTypes.bool,\n    disabled: PropTypes.bool,\n    capture: PropTypes.bool,\n    height: PropTypes.number,\n    onChange: PropTypes.func\n  }\n\n  constructor() {\n    super()\n\n    this.state = {\n      files: []\n    }\n  }\n\n  render() {\n    const {\n      name,\n      accept,\n      required,\n      multiple,\n      disabled,\n      capture,\n      height,\n      onChange, // Remove onChange from props\n      ...props\n    } = this.props\n    const { files } = this.state\n\n    let inputValue\n    if (files.length === 0) {\n      inputValue = ''\n    } else if (files.length === 1) {\n      inputValue = files[0].name\n    } else {\n      inputValue = `${files.length} files`\n    }\n\n    let buttonText\n    if (files.length === 0) {\n      buttonText = 'Select file'\n    } else if (files.length === 1) {\n      buttonText = 'Replace file'\n    } else {\n      buttonText = 'Replace files'\n    }\n\n    return (\n      <Box display=\"flex\" className={`${CLASS_PREFIX}-root`} {...props}>\n        <Box\n          innerRef={this.fileInputRef}\n          className={`${CLASS_PREFIX}-file-input`}\n          is=\"input\"\n          type=\"file\"\n          name={name}\n          accept={accept}\n          required={required}\n          multiple={multiple}\n          disabled={disabled}\n          capture={capture}\n          onChange={this.handleFileChange}\n          display=\"none\"\n        />\n\n        <TextInput\n          className={`${CLASS_PREFIX}-text-input`}\n          readOnly\n          value={inputValue}\n          placeholder=\"Select a file to upload…\"\n          // There's a weird specifity issue when there's two differently sized inputs on the page\n          borderTopRightRadius=\"0 !important\"\n          borderBottomRightRadius=\"0 !important\"\n          height={height}\n          flex={1}\n          textOverflow=\"ellipsis\"\n        />\n\n        <Button\n          className={`${CLASS_PREFIX}-button`}\n          onClick={this.handleButtonClick}\n          disabled={disabled}\n          borderTopLeftRadius={0}\n          borderBottomLeftRadius={0}\n          height={height}\n          flexShrink={0}\n        >\n          {buttonText}\n        </Button>\n      </Box>\n    )\n  }\n\n  fileInputRef = node => {\n    this.fileInput = node\n  }\n\n  handleFileChange = e => {\n    const { onChange } = this.props\n    // Firefox returns the same array instance each time for some reason\n    const files = [...e.target.files]\n\n    this.setState({ files })\n\n    if (onChange) {\n      onChange(files)\n    }\n  }\n\n  handleButtonClick = () => {\n    this.fileInput.click()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}