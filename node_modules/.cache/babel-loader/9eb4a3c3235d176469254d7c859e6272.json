{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from 'ui-box';\nimport { TextStyles } from '../../typography';\nimport { InputAppearances, getBorderRadiusForTextSize } from '../../shared-styles';\n\nvar Textarea = function (_PureComponent) {\n  _inherits(Textarea, _PureComponent);\n\n  function Textarea() {\n    _classCallCheck(this, Textarea);\n\n    return _possibleConstructorReturn(this, (Textarea.__proto__ || Object.getPrototypeOf(Textarea)).apply(this, arguments));\n  }\n\n  _createClass(Textarea, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          css = _props.css,\n          disabled = _props.disabled,\n          textSize = _props.textSize,\n          isInvalid = _props.isInvalid,\n          spellcheck = _props.spellcheck,\n          props = _objectWithoutProperties(_props, ['css', 'disabled', 'textSize', 'isInvalid', 'spellcheck']);\n\n      var textStyle = TextStyles[textSize];\n      var appearanceStyle = InputAppearances.default;\n      var borderRadius = getBorderRadiusForTextSize({\n        textSize: textSize\n      });\n      return React.createElement(Box, _extends({\n        is: 'textarea',\n        disabled: disabled,\n        borderRadius: borderRadius,\n        spellcheck: spellcheck\n      }, isInvalid ? {\n        'aria-invalid': true\n      } : {}, disabled ? {\n        color: 'extraMuted'\n      } : {}, textStyle, {\n        css: _extends({}, css, appearanceStyle)\n      }, Textarea.styles, props));\n    }\n  }]);\n\n  return Textarea;\n}(PureComponent);\n\nTextarea.propTypes = _extends({}, Box.propTypes, {\n  disabled: PropTypes.bool.isRequired,\n  isInvalid: PropTypes.bool.isRequired,\n  spellcheck: PropTypes.bool.isRequired,\n  textSize: PropTypes.oneOf(Object.keys(TextStyles))\n});\nTextarea.defaultProps = {\n  disabled: false,\n  isInvalid: false,\n  spellcheck: true,\n  textSize: 300\n};\nTextarea.styles = {\n  boxSizing: 'border-box',\n  minHeight: 80,\n  minWidth: 280,\n  paddingX: 10,\n  paddingY: 8\n};\nexport default Textarea;","map":{"version":3,"sources":["../../../src/textarea/src/Textarea.js"],"names":["Textarea","PureComponent","propTypes","Box","disabled","PropTypes","isRequired","isInvalid","spellcheck","textSize","Object","defaultProps","styles","boxSizing","minHeight","minWidth","paddingX","paddingY","css","props","textStyle","TextStyles","appearanceStyle","InputAppearances","borderRadius","getBorderRadiusForTextSize","color"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,GAAA,MAAA,QAAA;AACA,SAAA,UAAA,QAAA,kBAAA;AACA,SAAA,gBAAA,EAAA,0BAAA,QAAA,qBAAA;;IAKqBA,Q;;;;;;;;;;;6BAwBV;AAAA,UAAA,MAAA,GAQH,KARG,KAAA;AAAA,UAELkB,GAFK,GAAA,MAAA,CAAA,GAAA;AAAA,UAGLd,QAHK,GAAA,MAAA,CAAA,QAAA;AAAA,UAILK,QAJK,GAAA,MAAA,CAAA,QAAA;AAAA,UAKLF,SALK,GAAA,MAAA,CAAA,SAAA;AAAA,UAMLC,UANK,GAAA,MAAA,CAAA,UAAA;AAAA,UAOFW,KAPE,GAAA,wBAAA,CAAA,MAAA,EAAA,CAAA,KAAA,EAAA,UAAA,EAAA,UAAA,EAAA,WAAA,EAAA,YAAA,CAAA,CAAA;;AAUP,UAAMC,SAAAA,GAAYC,UAAAA,CAAlB,QAAkBA,CAAlB;AACA,UAAMC,eAAAA,GAAkBC,gBAAAA,CAAxB,OAAA;AACA,UAAMC,YAAAA,GAAeC,0BAAAA,CAA2B;AAAEhB,QAAAA,QAAAA,EAAlD;AAAgD,OAA3BgB,CAArB;AAEA,aACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AACE,QAAA,EAAA,EADF,UAAA;AAEE,QAAA,QAAA,EAFF,QAAA;AAGE,QAAA,YAAA,EAHF,YAAA;AAIE,QAAA,UAAA,EAAYjB;AAJd,OAAA,EAKOD,SAAAA,GAAY;AAAE,wBAAdA;AAAY,OAAZA,GALP,EAAA,EAMOH,QAAAA,GAAW;AAAEsB,QAAAA,KAAAA,EAAbtB;AAAW,OAAXA,GANP,EAAA,EAAA,SAAA,EAAA;AAQE,QAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,GAAA,EAAA,eAAA;AARF,OAAA,EASMJ,QAAAA,CATN,MAAA,EADF,KACE,CAAA,CADF;AAcD;;;;EApDmCC,a;;AAAjBD,Q,CACZE,SADYF,G,aAEdG,GAAAA,CAAID,S;AACPE,EAAAA,QAAAA,EAAUC,SAAAA,CAAAA,IAAAA,CAAeC,U;AACzBC,EAAAA,SAAAA,EAAWF,SAAAA,CAAAA,IAAAA,CAAeC,U;AAC1BE,EAAAA,UAAAA,EAAYH,SAAAA,CAAAA,IAAAA,CAAeC,U;AAC3BG,EAAAA,QAAAA,EAAUJ,SAAAA,CAAAA,KAAAA,CAAgBK,MAAAA,CAAAA,IAAAA,CAAhBL,UAAgBK,CAAhBL;EANOL;AAAAA,Q,CASZW,YATYX,GASG;AACpBI,EAAAA,QAAAA,EADoB,KAAA;AAEpBG,EAAAA,SAAAA,EAFoB,KAAA;AAGpBC,EAAAA,UAAAA,EAHoB,IAAA;AAIpBC,EAAAA,QAAAA,EAAU;AAJU,CATHT;AAAAA,Q,CAgBZY,MAhBYZ,GAgBH;AACda,EAAAA,SAAAA,EADc,YAAA;AAEdC,EAAAA,SAAAA,EAFc,EAAA;AAGdC,EAAAA,QAAAA,EAHc,GAAA;AAIdC,EAAAA,QAAAA,EAJc,EAAA;AAKdC,EAAAA,QAAAA,EAAU;AALI,CAhBGjB;eAAAA,Q","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { TextStyles } from '../../typography'\nimport {\n  InputAppearances,\n  getBorderRadiusForTextSize\n} from '../../shared-styles'\n\nexport default class Textarea extends PureComponent {\n  static propTypes = {\n    ...Box.propTypes,\n    disabled: PropTypes.bool.isRequired,\n    isInvalid: PropTypes.bool.isRequired,\n    spellcheck: PropTypes.bool.isRequired,\n    textSize: PropTypes.oneOf(Object.keys(TextStyles))\n  }\n\n  static defaultProps = {\n    disabled: false,\n    isInvalid: false,\n    spellcheck: true,\n    textSize: 300\n  }\n\n  static styles = {\n    boxSizing: 'border-box',\n    minHeight: 80,\n    minWidth: 280,\n    paddingX: 10,\n    paddingY: 8\n  }\n\n  render() {\n    const {\n      css,\n      disabled,\n      textSize,\n      isInvalid,\n      spellcheck,\n      ...props\n    } = this.props\n\n    const textStyle = TextStyles[textSize]\n    const appearanceStyle = InputAppearances.default\n    const borderRadius = getBorderRadiusForTextSize({ textSize })\n\n    return (\n      <Box\n        is=\"textarea\"\n        disabled={disabled}\n        borderRadius={borderRadius}\n        spellcheck={spellcheck}\n        {...(isInvalid ? { 'aria-invalid': true } : {})}\n        {...(disabled ? { color: 'extraMuted' } : {})}\n        {...textStyle}\n        css={{ ...css, ...appearanceStyle }}\n        {...Textarea.styles}\n        {...props}\n      />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}