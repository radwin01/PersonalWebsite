{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _getCss = require('../get-css');\n\nvar _getCss2 = _interopRequireDefault(_getCss);\n\nvar _regex = require('../utils/regex');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar propTypes = exports.propTypes = {\n  border: _propTypes2.default.string,\n  borderBottom: _propTypes2.default.string,\n  borderBottomColor: _propTypes2.default.string,\n  borderBottomStyle: _propTypes2.default.string,\n  borderBottomWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  borderColor: _propTypes2.default.string,\n  borderLeft: _propTypes2.default.string,\n  borderLeftColor: _propTypes2.default.string,\n  borderLeftStyle: _propTypes2.default.string,\n  borderLeftWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  borderRight: _propTypes2.default.string,\n  borderRightColor: _propTypes2.default.string,\n  borderRightStyle: _propTypes2.default.string,\n  borderRightWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  borderStyle: _propTypes2.default.string,\n  borderTop: _propTypes2.default.string,\n  borderTopColor: _propTypes2.default.string,\n  borderTopStyle: _propTypes2.default.string,\n  borderTopWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  borderWidth: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])\n};\nvar propAliases = exports.propAliases = {\n  border: ['borderBottom', 'borderLeft', 'borderRight', 'borderTop'],\n  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],\n  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],\n  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth']\n};\nvar propValidators = exports.propValidators = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  propValidators.borderColor = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return 'multiple values (\\u201C' + value + '\\u201D) aren\\u055At supported with \\u201CborderColor\\u201D. Use \\u201CborderBottomColor\\u201D, \\u201CborderLeftColor\\u201D \\u201CborderRightColor\\u201D and \\u201CborderTopColor\\u201D instead.';\n    }\n  };\n\n  propValidators.borderStyle = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return 'multiple values (\\u201C' + value + '\\u201D) aren\\u055At supported with \\u201CborderStyle\\u201D. Use \\u201CborderBottomStyle\\u201D, \\u201CborderLeftStyle\\u201D \\u201CborderRightStyle\\u201D and \\u201CborderTopStyle\\u201D instead.';\n    }\n  };\n\n  propValidators.borderWidth = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return 'multiple values (\\u201C' + value + '\\u201D) aren\\u055At supported with \\u201CborderWidth\\u201D. Use \\u201CborderBottomWidth\\u201D, \\u201CborderLeftWidth\\u201D \\u201CborderRightWidth\\u201D and \\u201CborderTopWidth\\u201D instead.';\n    }\n  };\n}\n\nvar _borderLeft = {\n  className: 'b-lft',\n  cssName: 'border-left',\n  jsName: 'borderLeft'\n};\nvar _borderLeftColor = {\n  className: 'b-lft-clr',\n  cssName: 'border-left-color',\n  jsName: 'borderLeftColor'\n};\nvar _borderLeftStyle = {\n  className: 'b-lft-stl',\n  cssName: 'border-left-style',\n  jsName: 'borderLeftStyle',\n  safeValue: true\n};\nvar _borderLeftWidth = {\n  className: 'b-lft-wdt',\n  cssName: 'border-left-width',\n  jsName: 'borderLeftWidth'\n};\nvar _borderRight = {\n  className: 'b-rgt',\n  cssName: 'border-right',\n  jsName: 'borderRight'\n};\nvar _borderRightColor = {\n  className: 'b-rgt-clr',\n  cssName: 'border-right-color',\n  jsName: 'borderRightColor'\n};\nvar _borderRightStyle = {\n  className: 'b-rgt-stl',\n  cssName: 'border-right-style',\n  jsName: 'borderRightStyle',\n  safeValue: true\n};\nvar _borderRightWidth = {\n  className: 'b-rgt-wdt',\n  cssName: 'border-right-width',\n  jsName: 'borderRightWidth'\n};\nvar _borderTop = {\n  className: 'b-top',\n  cssName: 'border-top',\n  jsName: 'borderTop'\n};\nvar _borderTopColor = {\n  className: 'b-top-clr',\n  cssName: 'border-top-color',\n  jsName: 'borderTopColor'\n};\nvar _borderTopStyle = {\n  className: 'b-top-stl',\n  cssName: 'border-top-style',\n  jsName: 'borderTopStyle',\n  safeValue: true\n};\nvar _borderTopWidth = {\n  className: 'b-top-wdt',\n  cssName: 'border-top-width',\n  jsName: 'borderTopWidth'\n};\nvar _borderBottom = {\n  className: 'b-btm',\n  cssName: 'border-bottom',\n  jsName: 'borderBottom'\n};\nvar _borderBottomColor = {\n  className: 'b-btm-clr',\n  cssName: 'border-bottom-color',\n  jsName: 'borderBottomColor'\n};\nvar _borderBottomStyle = {\n  className: 'b-btm-stl',\n  cssName: 'border-bottom-style',\n  jsName: 'borderBottomStyle',\n  safeValue: true\n};\nvar _borderBottomWidth = {\n  className: 'b-btm-wdt',\n  cssName: 'border-bottom-width',\n  jsName: 'borderBottomWidth'\n};\nvar propEnhancers = exports.propEnhancers = {\n  borderBottom: function borderBottom(value) {\n    return (0, _getCss2.default)(_borderBottom, value);\n  },\n  borderBottomColor: function borderBottomColor(value) {\n    return (0, _getCss2.default)(_borderBottomColor, value);\n  },\n  borderBottomStyle: function borderBottomStyle(value) {\n    return (0, _getCss2.default)(_borderBottomStyle, value);\n  },\n  borderBottomWidth: function borderBottomWidth(value) {\n    return (0, _getCss2.default)(_borderBottomWidth, value);\n  },\n  borderLeft: function borderLeft(value) {\n    return (0, _getCss2.default)(_borderLeft, value);\n  },\n  borderLeftColor: function borderLeftColor(value) {\n    return (0, _getCss2.default)(_borderLeftColor, value);\n  },\n  borderLeftStyle: function borderLeftStyle(value) {\n    return (0, _getCss2.default)(_borderLeftStyle, value);\n  },\n  borderLeftWidth: function borderLeftWidth(value) {\n    return (0, _getCss2.default)(_borderLeftWidth, value);\n  },\n  borderRight: function borderRight(value) {\n    return (0, _getCss2.default)(_borderRight, value);\n  },\n  borderRightColor: function borderRightColor(value) {\n    return (0, _getCss2.default)(_borderRightColor, value);\n  },\n  borderRightStyle: function borderRightStyle(value) {\n    return (0, _getCss2.default)(_borderRightStyle, value);\n  },\n  borderRightWidth: function borderRightWidth(value) {\n    return (0, _getCss2.default)(_borderRightWidth, value);\n  },\n  borderTop: function borderTop(value) {\n    return (0, _getCss2.default)(_borderTop, value);\n  },\n  borderTopColor: function borderTopColor(value) {\n    return (0, _getCss2.default)(_borderTopColor, value);\n  },\n  borderTopStyle: function borderTopStyle(value) {\n    return (0, _getCss2.default)(_borderTopStyle, value);\n  },\n  borderTopWidth: function borderTopWidth(value) {\n    return (0, _getCss2.default)(_borderTopWidth, value);\n  }\n};","map":{"version":3,"sources":["../../src/enhancers/borders.js"],"names":["propTypes","border","PropTypes","borderBottom","borderBottomColor","borderBottomStyle","borderBottomWidth","borderColor","borderLeft","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRight","borderRightColor","borderRightStyle","borderRightWidth","borderStyle","borderTop","borderTopColor","borderTopStyle","borderTopWidth","borderWidth","propAliases","propValidators","process","spacesOutsideParentheses","className","cssName","jsName","safeValue","propEnhancers"],"mappings":";;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;;;;;;;AAEO,IAAMA,SAAAA,GAAAA,OAAAA,CAAAA,SAAAA,GAAY;AACvBC,EAAAA,MAAAA,EAAQC,WAAAA,CAAAA,OAAAA,CADe,MAAA;AAEvBC,EAAAA,YAAAA,EAAcD,WAAAA,CAAAA,OAAAA,CAFS,MAAA;AAGvBE,EAAAA,iBAAAA,EAAmBF,WAAAA,CAAAA,OAAAA,CAHI,MAAA;AAIvBG,EAAAA,iBAAAA,EAAmBH,WAAAA,CAAAA,OAAAA,CAJI,MAAA;AAKvBI,EAAAA,iBAAAA,EAAmBJ,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CALnC,MAKgB,CAApBA,CALI;AAMvBK,EAAAA,WAAAA,EAAaL,WAAAA,CAAAA,OAAAA,CANU,MAAA;AAOvBM,EAAAA,UAAAA,EAAYN,WAAAA,CAAAA,OAAAA,CAPW,MAAA;AAQvBO,EAAAA,eAAAA,EAAiBP,WAAAA,CAAAA,OAAAA,CARM,MAAA;AASvBQ,EAAAA,eAAAA,EAAiBR,WAAAA,CAAAA,OAAAA,CATM,MAAA;AAUvBS,EAAAA,eAAAA,EAAiBT,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAVjC,MAUc,CAApBA,CAVM;AAWvBU,EAAAA,WAAAA,EAAaV,WAAAA,CAAAA,OAAAA,CAXU,MAAA;AAYvBW,EAAAA,gBAAAA,EAAkBX,WAAAA,CAAAA,OAAAA,CAZK,MAAA;AAavBY,EAAAA,gBAAAA,EAAkBZ,WAAAA,CAAAA,OAAAA,CAbK,MAAA;AAcvBa,EAAAA,gBAAAA,EAAkBb,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAdlC,MAce,CAApBA,CAdK;AAevBc,EAAAA,WAAAA,EAAad,WAAAA,CAAAA,OAAAA,CAfU,MAAA;AAgBvBe,EAAAA,SAAAA,EAAWf,WAAAA,CAAAA,OAAAA,CAhBY,MAAA;AAiBvBgB,EAAAA,cAAAA,EAAgBhB,WAAAA,CAAAA,OAAAA,CAjBO,MAAA;AAkBvBiB,EAAAA,cAAAA,EAAgBjB,WAAAA,CAAAA,OAAAA,CAlBO,MAAA;AAmBvBkB,EAAAA,cAAAA,EAAgBlB,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAnBhC,MAmBa,CAApBA,CAnBO;AAoBvBmB,EAAAA,WAAAA,EAAanB,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAAvCA,MAAoB,CAApBA;AApBU,CAAlB;AAuBA,IAAMoB,WAAAA,GAAAA,OAAAA,CAAAA,WAAAA,GAAc;AACzBrB,EAAAA,MAAAA,EAAQ,CAAA,cAAA,EAAA,YAAA,EAAA,aAAA,EADiB,WACjB,CADiB;AAEzBM,EAAAA,WAAAA,EAAa,CAAA,mBAAA,EAAA,iBAAA,EAAA,kBAAA,EAFY,gBAEZ,CAFY;AAQzBS,EAAAA,WAAAA,EAAa,CAAA,mBAAA,EAAA,iBAAA,EAAA,kBAAA,EARY,gBAQZ,CARY;AAczBK,EAAAA,WAAAA,EAAa,CAAA,mBAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,gBAAA;AAdY,CAApB;AAsBA,IAAME,cAAAA,GAAAA,OAAAA,CAAAA,cAAAA,GAAN,EAAA;;AAEP,IAAIC,OAAAA,CAAAA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AACzCD,EAAAA,cAAAA,CAAAA,WAAAA,GAA6B,UAAA,KAAA,EAAS;AACpC,QAAIE,MAAAA,CAAAA,wBAAAA,CAAAA,IAAAA,CAAJ,KAAIA,CAAJ,EAA0C;AACxC,aAAA,4BAAA,KAAA,GAAA,iMAAA;AACD;AAHHF,GAAAA;;AAKAA,EAAAA,cAAAA,CAAAA,WAAAA,GAA6B,UAAA,KAAA,EAAS;AACpC,QAAIE,MAAAA,CAAAA,wBAAAA,CAAAA,IAAAA,CAAJ,KAAIA,CAAJ,EAA0C;AACxC,aAAA,4BAAA,KAAA,GAAA,iMAAA;AACD;AAHHF,GAAAA;;AAKAA,EAAAA,cAAAA,CAAAA,WAAAA,GAA6B,UAAA,KAAA,EAAS;AACpC,QAAIE,MAAAA,CAAAA,wBAAAA,CAAAA,IAAAA,CAAJ,KAAIA,CAAJ,EAA0C;AACxC,aAAA,4BAAA,KAAA,GAAA,iMAAA;AACD;AAHHF,GAAAA;AAKD;;AAED,IAAMf,WAAAA,GAAa;AACjBkB,EAAAA,SAAAA,EADiB,OAAA;AAEjBC,EAAAA,OAAAA,EAFiB,aAAA;AAGjBC,EAAAA,MAAAA,EAAQ;AAHS,CAAnB;AAKA,IAAMnB,gBAAAA,GAAkB;AACtBiB,EAAAA,SAAAA,EADsB,WAAA;AAEtBC,EAAAA,OAAAA,EAFsB,mBAAA;AAGtBC,EAAAA,MAAAA,EAAQ;AAHc,CAAxB;AAKA,IAAMlB,gBAAAA,GAAkB;AACtBgB,EAAAA,SAAAA,EADsB,WAAA;AAEtBC,EAAAA,OAAAA,EAFsB,mBAAA;AAGtBC,EAAAA,MAAAA,EAHsB,iBAAA;AAItBC,EAAAA,SAAAA,EAAW;AAJW,CAAxB;AAMA,IAAMlB,gBAAAA,GAAkB;AACtBe,EAAAA,SAAAA,EADsB,WAAA;AAEtBC,EAAAA,OAAAA,EAFsB,mBAAA;AAGtBC,EAAAA,MAAAA,EAAQ;AAHc,CAAxB;AAKA,IAAMhB,YAAAA,GAAc;AAClBc,EAAAA,SAAAA,EADkB,OAAA;AAElBC,EAAAA,OAAAA,EAFkB,cAAA;AAGlBC,EAAAA,MAAAA,EAAQ;AAHU,CAApB;AAKA,IAAMf,iBAAAA,GAAmB;AACvBa,EAAAA,SAAAA,EADuB,WAAA;AAEvBC,EAAAA,OAAAA,EAFuB,oBAAA;AAGvBC,EAAAA,MAAAA,EAAQ;AAHe,CAAzB;AAKA,IAAMd,iBAAAA,GAAmB;AACvBY,EAAAA,SAAAA,EADuB,WAAA;AAEvBC,EAAAA,OAAAA,EAFuB,oBAAA;AAGvBC,EAAAA,MAAAA,EAHuB,kBAAA;AAIvBC,EAAAA,SAAAA,EAAW;AAJY,CAAzB;AAMA,IAAMd,iBAAAA,GAAmB;AACvBW,EAAAA,SAAAA,EADuB,WAAA;AAEvBC,EAAAA,OAAAA,EAFuB,oBAAA;AAGvBC,EAAAA,MAAAA,EAAQ;AAHe,CAAzB;AAKA,IAAMX,UAAAA,GAAY;AAChBS,EAAAA,SAAAA,EADgB,OAAA;AAEhBC,EAAAA,OAAAA,EAFgB,YAAA;AAGhBC,EAAAA,MAAAA,EAAQ;AAHQ,CAAlB;AAKA,IAAMV,eAAAA,GAAiB;AACrBQ,EAAAA,SAAAA,EADqB,WAAA;AAErBC,EAAAA,OAAAA,EAFqB,kBAAA;AAGrBC,EAAAA,MAAAA,EAAQ;AAHa,CAAvB;AAKA,IAAMT,eAAAA,GAAiB;AACrBO,EAAAA,SAAAA,EADqB,WAAA;AAErBC,EAAAA,OAAAA,EAFqB,kBAAA;AAGrBC,EAAAA,MAAAA,EAHqB,gBAAA;AAIrBC,EAAAA,SAAAA,EAAW;AAJU,CAAvB;AAMA,IAAMT,eAAAA,GAAiB;AACrBM,EAAAA,SAAAA,EADqB,WAAA;AAErBC,EAAAA,OAAAA,EAFqB,kBAAA;AAGrBC,EAAAA,MAAAA,EAAQ;AAHa,CAAvB;AAKA,IAAMzB,aAAAA,GAAe;AACnBuB,EAAAA,SAAAA,EADmB,OAAA;AAEnBC,EAAAA,OAAAA,EAFmB,eAAA;AAGnBC,EAAAA,MAAAA,EAAQ;AAHW,CAArB;AAKA,IAAMxB,kBAAAA,GAAoB;AACxBsB,EAAAA,SAAAA,EADwB,WAAA;AAExBC,EAAAA,OAAAA,EAFwB,qBAAA;AAGxBC,EAAAA,MAAAA,EAAQ;AAHgB,CAA1B;AAKA,IAAMvB,kBAAAA,GAAoB;AACxBqB,EAAAA,SAAAA,EADwB,WAAA;AAExBC,EAAAA,OAAAA,EAFwB,qBAAA;AAGxBC,EAAAA,MAAAA,EAHwB,mBAAA;AAIxBC,EAAAA,SAAAA,EAAW;AAJa,CAA1B;AAMA,IAAMvB,kBAAAA,GAAoB;AACxBoB,EAAAA,SAAAA,EADwB,WAAA;AAExBC,EAAAA,OAAAA,EAFwB,qBAAA;AAGxBC,EAAAA,MAAAA,EAAQ;AAHgB,CAA1B;AAMO,IAAME,aAAAA,GAAAA,OAAAA,CAAAA,aAAAA,GAAgB;AAC3B3B,EAAAA,YAAAA,EAAc,SAAA,YAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,aAAA,EAAT,KAAS,CAAT;AADa,GAAA;AAE3BC,EAAAA,iBAAAA,EAAmB,SAAA,iBAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,kBAAA,EAAT,KAAS,CAAT;AAFQ,GAAA;AAG3BC,EAAAA,iBAAAA,EAAmB,SAAA,iBAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,kBAAA,EAAT,KAAS,CAAT;AAHQ,GAAA;AAI3BC,EAAAA,iBAAAA,EAAmB,SAAA,iBAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,kBAAA,EAAT,KAAS,CAAT;AAJQ,GAAA;AAK3BE,EAAAA,UAAAA,EAAY,SAAA,UAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,WAAA,EAAT,KAAS,CAAT;AALe,GAAA;AAM3BC,EAAAA,eAAAA,EAAiB,SAAA,eAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,gBAAA,EAAT,KAAS,CAAT;AANU,GAAA;AAO3BC,EAAAA,eAAAA,EAAiB,SAAA,eAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,gBAAA,EAAT,KAAS,CAAT;AAPU,GAAA;AAQ3BC,EAAAA,eAAAA,EAAiB,SAAA,eAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,gBAAA,EAAT,KAAS,CAAT;AARU,GAAA;AAS3BC,EAAAA,WAAAA,EAAa,SAAA,WAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,YAAA,EAAT,KAAS,CAAT;AATc,GAAA;AAU3BC,EAAAA,gBAAAA,EAAkB,SAAA,gBAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,iBAAA,EAAT,KAAS,CAAT;AAVS,GAAA;AAW3BC,EAAAA,gBAAAA,EAAkB,SAAA,gBAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,iBAAA,EAAT,KAAS,CAAT;AAXS,GAAA;AAY3BC,EAAAA,gBAAAA,EAAkB,SAAA,gBAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,iBAAA,EAAT,KAAS,CAAT;AAZS,GAAA;AAa3BE,EAAAA,SAAAA,EAAW,SAAA,SAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,UAAA,EAAT,KAAS,CAAT;AAbgB,GAAA;AAc3BC,EAAAA,cAAAA,EAAgB,SAAA,cAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,eAAA,EAAT,KAAS,CAAT;AAdW,GAAA;AAe3BC,EAAAA,cAAAA,EAAgB,SAAA,cAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,eAAA,EAAT,KAAS,CAAT;AAfW,GAAA;AAgB3BC,EAAAA,cAAAA,EAAgB,SAAA,cAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,eAAA,EAAT,KAAS,CAAT;AAAA;AAhBW,CAAtB","sourcesContent":["import PropTypes from 'prop-types'\nimport getCss from '../get-css'\nimport {spacesOutsideParentheses} from '../utils/regex'\n\nexport const propTypes = {\n  border: PropTypes.string,\n  borderBottom: PropTypes.string,\n  borderBottomColor: PropTypes.string,\n  borderBottomStyle: PropTypes.string,\n  borderBottomWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  borderColor: PropTypes.string,\n  borderLeft: PropTypes.string,\n  borderLeftColor: PropTypes.string,\n  borderLeftStyle: PropTypes.string,\n  borderLeftWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  borderRight: PropTypes.string,\n  borderRightColor: PropTypes.string,\n  borderRightStyle: PropTypes.string,\n  borderRightWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  borderStyle: PropTypes.string,\n  borderTop: PropTypes.string,\n  borderTopColor: PropTypes.string,\n  borderTopStyle: PropTypes.string,\n  borderTopWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  borderWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport const propAliases = {\n  border: ['borderBottom', 'borderLeft', 'borderRight', 'borderTop'],\n  borderColor: [\n    'borderBottomColor',\n    'borderLeftColor',\n    'borderRightColor',\n    'borderTopColor'\n  ],\n  borderStyle: [\n    'borderBottomStyle',\n    'borderLeftStyle',\n    'borderRightStyle',\n    'borderTopStyle'\n  ],\n  borderWidth: [\n    'borderBottomWidth',\n    'borderLeftWidth',\n    'borderRightWidth',\n    'borderTopWidth'\n  ]\n}\n\nexport const propValidators = {}\n\nif (process.env.NODE_ENV !== 'production') {\n  propValidators.borderColor = value => {\n    if (spacesOutsideParentheses.test(value)) {\n      return `multiple values (“${value}”) aren՚t supported with “borderColor”. Use “borderBottomColor”, “borderLeftColor” “borderRightColor” and “borderTopColor” instead.`\n    }\n  }\n  propValidators.borderStyle = value => {\n    if (spacesOutsideParentheses.test(value)) {\n      return `multiple values (“${value}”) aren՚t supported with “borderStyle”. Use “borderBottomStyle”, “borderLeftStyle” “borderRightStyle” and “borderTopStyle” instead.`\n    }\n  }\n  propValidators.borderWidth = value => {\n    if (spacesOutsideParentheses.test(value)) {\n      return `multiple values (“${value}”) aren՚t supported with “borderWidth”. Use “borderBottomWidth”, “borderLeftWidth” “borderRightWidth” and “borderTopWidth” instead.`\n    }\n  }\n}\n\nconst borderLeft = {\n  className: 'b-lft',\n  cssName: 'border-left',\n  jsName: 'borderLeft'\n}\nconst borderLeftColor = {\n  className: 'b-lft-clr',\n  cssName: 'border-left-color',\n  jsName: 'borderLeftColor'\n}\nconst borderLeftStyle = {\n  className: 'b-lft-stl',\n  cssName: 'border-left-style',\n  jsName: 'borderLeftStyle',\n  safeValue: true\n}\nconst borderLeftWidth = {\n  className: 'b-lft-wdt',\n  cssName: 'border-left-width',\n  jsName: 'borderLeftWidth'\n}\nconst borderRight = {\n  className: 'b-rgt',\n  cssName: 'border-right',\n  jsName: 'borderRight'\n}\nconst borderRightColor = {\n  className: 'b-rgt-clr',\n  cssName: 'border-right-color',\n  jsName: 'borderRightColor'\n}\nconst borderRightStyle = {\n  className: 'b-rgt-stl',\n  cssName: 'border-right-style',\n  jsName: 'borderRightStyle',\n  safeValue: true\n}\nconst borderRightWidth = {\n  className: 'b-rgt-wdt',\n  cssName: 'border-right-width',\n  jsName: 'borderRightWidth'\n}\nconst borderTop = {\n  className: 'b-top',\n  cssName: 'border-top',\n  jsName: 'borderTop'\n}\nconst borderTopColor = {\n  className: 'b-top-clr',\n  cssName: 'border-top-color',\n  jsName: 'borderTopColor'\n}\nconst borderTopStyle = {\n  className: 'b-top-stl',\n  cssName: 'border-top-style',\n  jsName: 'borderTopStyle',\n  safeValue: true\n}\nconst borderTopWidth = {\n  className: 'b-top-wdt',\n  cssName: 'border-top-width',\n  jsName: 'borderTopWidth'\n}\nconst borderBottom = {\n  className: 'b-btm',\n  cssName: 'border-bottom',\n  jsName: 'borderBottom'\n}\nconst borderBottomColor = {\n  className: 'b-btm-clr',\n  cssName: 'border-bottom-color',\n  jsName: 'borderBottomColor'\n}\nconst borderBottomStyle = {\n  className: 'b-btm-stl',\n  cssName: 'border-bottom-style',\n  jsName: 'borderBottomStyle',\n  safeValue: true\n}\nconst borderBottomWidth = {\n  className: 'b-btm-wdt',\n  cssName: 'border-bottom-width',\n  jsName: 'borderBottomWidth'\n}\n\nexport const propEnhancers = {\n  borderBottom: value => getCss(borderBottom, value),\n  borderBottomColor: value => getCss(borderBottomColor, value),\n  borderBottomStyle: value => getCss(borderBottomStyle, value),\n  borderBottomWidth: value => getCss(borderBottomWidth, value),\n  borderLeft: value => getCss(borderLeft, value),\n  borderLeftColor: value => getCss(borderLeftColor, value),\n  borderLeftStyle: value => getCss(borderLeftStyle, value),\n  borderLeftWidth: value => getCss(borderLeftWidth, value),\n  borderRight: value => getCss(borderRight, value),\n  borderRightColor: value => getCss(borderRightColor, value),\n  borderRightStyle: value => getCss(borderRightStyle, value),\n  borderRightWidth: value => getCss(borderRightWidth, value),\n  borderTop: value => getCss(borderTop, value),\n  borderTopColor: value => getCss(borderTopColor, value),\n  borderTopStyle: value => getCss(borderTopStyle, value),\n  borderTopWidth: value => getCss(borderTopWidth, value)\n}\n"]},"metadata":{},"sourceType":"script"}