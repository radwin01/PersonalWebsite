{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { spacing, position, layout } from 'ui-box';\nimport SwitchAppearances from './styles/SwitchAppearances';\nvar animationEasing = {\n  spring: 'cubic-bezier(0.175, 0.885, 0.320, 1.175)'\n};\nvar handleStyle = {\n  backgroundColor: '#fff',\n  borderRadius: 9999\n};\nvar iconContainerStyle = {\n  transition: 'all 500ms ' + animationEasing.spring,\n  opacity: 0,\n  transform: 'scale(0.0)',\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  justifyContent: 'center',\n  paddingLeft: 4,\n  '&[data-checked=\"true\"]': {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\nvar handleContainerStyle = {\n  transition: 'transform 200ms ease-in-out',\n  transform: 'translateX(0%)',\n  '&[data-checked=\"true\"]': {\n    transform: 'translateX(50%)'\n  }\n};\n\nvar CheckIcon = function CheckIcon(_ref) {\n  var size = _ref.size,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === undefined ? 'currentColor' : _ref$fill,\n      props = _objectWithoutProperties(_ref, ['size', 'fill']);\n\n  return React.createElement('svg', _extends({\n    width: 10,\n    height: size,\n    viewBox: '0 0 10 7'\n  }, props), React.createElement('path', {\n    fill: fill,\n    fillRule: 'evenodd',\n    d: 'M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z'\n  }));\n};\n\nCheckIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.number\n};\n\nvar isControlled = function isControlled(component) {\n  return {}.hasOwnProperty.call(component.props, 'checked');\n};\n\nvar Switch = function (_PureComponent) {\n  _inherits(Switch, _PureComponent);\n\n  function Switch(props, context) {\n    _classCallCheck(this, Switch);\n\n    var _this = _possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).call(this, props, context));\n\n    _this.handleChange = function (value) {\n      if (isControlled(_this)) {\n        _this.props.onChange(value);\n      } else {\n        _this.setState({\n          checked: !_this.state.checked\n        });\n\n        _this.props.onChange(value);\n      }\n    };\n\n    _this.state = {\n      checked: props.checked || props.defaultChecked || false\n    };\n    return _this;\n  }\n\n  _createClass(Switch, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          id = _props.id,\n          name = _props.name,\n          height = _props.height,\n          checkedProps = _props.checked,\n          onChange = _props.onChange,\n          disabled = _props.disabled,\n          appearance = _props.appearance,\n          hasCheckIcon = _props.hasCheckIcon,\n          defaultChecked = _props.defaultChecked,\n          props = _objectWithoutProperties(_props, ['id', 'name', 'height', 'checked', 'onChange', 'disabled', 'appearance', 'hasCheckIcon', 'defaultChecked']);\n\n      var checked = isControlled(this) ? checkedProps : this.state.checked;\n      var appearanceStyle = SwitchAppearances[appearance];\n      return React.createElement(Box, _extends({\n        is: 'label',\n        display: 'block',\n        width: height * 2\n      }, props), React.createElement(Box, {\n        is: 'input',\n        id: id,\n        name: name,\n        type: 'checkbox',\n        checked: checked,\n        disabled: disabled,\n        defaultChecked: defaultChecked,\n        onChange: this.handleChange,\n        css: appearanceStyle\n      }), React.createElement(Box, {\n        onClick: this.handleClick,\n        height: height,\n        width: height * 2\n      }, React.createElement(Box, {\n        height: height,\n        width: height,\n        'data-checked': checked,\n        css: iconContainerStyle\n      }, hasCheckIcon && React.createElement(CheckIcon, {\n        size: height / 2 - 3\n      })), React.createElement(Box, {\n        width: height * 2,\n        display: 'flex',\n        'data-checked': checked,\n        css: handleContainerStyle\n      }, React.createElement(Box, {\n        flex: 1,\n        padding: 2\n      }, React.createElement(Box, {\n        width: height - 4,\n        height: height - 4,\n        css: handleStyle\n      })))));\n    }\n  }]);\n\n  return Switch;\n}(PureComponent);\n\nSwitch.propTypes = _extends({}, position.propTypes, layout.propTypes, spacing.propTypes, {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.node,\n  value: PropTypes.string,\n  height: PropTypes.number,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n  disabled: PropTypes.bool,\n  isInvalid: PropTypes.bool,\n  appearance: PropTypes.oneOf(Object.keys(SwitchAppearances)),\n  hasCheckIcon: PropTypes.bool,\n  defaultChecked: PropTypes.bool\n});\nSwitch.defaultProps = {\n  height: 16,\n  onChange: function onChange() {},\n  appearance: 'default',\n  hasCheckIcon: true\n};\nexport default Switch;","map":{"version":3,"sources":["../../../src/switch/src/Switch.js"],"names":["animationEasing","spring","handleStyle","backgroundColor","borderRadius","iconContainerStyle","transition","opacity","transform","display","position","alignItems","justifyContent","paddingLeft","handleContainerStyle","CheckIcon","size","fill","props","PropTypes","number","isControlled","component","Switch","PureComponent","propTypes","layout","spacing","id","string","name","label","node","value","height","checked","bool","onChange","func","disabled","isInvalid","appearance","Object","hasCheckIcon","defaultChecked","defaultProps","checkedProps","appearanceStyle","SwitchAppearances"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Box, { spacing, position, layout } from 'ui-box'\nimport SwitchAppearances from './styles/SwitchAppearances'\n\nconst animationEasing = {\n  spring: `cubic-bezier(0.175, 0.885, 0.320, 1.175)`\n}\n\nconst handleStyle = {\n  backgroundColor: '#fff',\n  borderRadius: 9999\n}\n\nconst iconContainerStyle = {\n  transition: `all 500ms ${animationEasing.spring}`,\n  opacity: 0,\n  transform: 'scale(0.0)',\n  display: 'flex',\n  position: 'absolute',\n  alignItems: 'center',\n  justifyContent: 'center',\n  paddingLeft: 4,\n  '&[data-checked=\"true\"]': {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n}\n\nconst handleContainerStyle = {\n  transition: 'transform 200ms ease-in-out',\n  transform: 'translateX(0%)',\n  '&[data-checked=\"true\"]': {\n    transform: 'translateX(50%)'\n  }\n}\n\nconst CheckIcon = ({ size, fill = 'currentColor', ...props }) => (\n  <svg width={10} height={size} viewBox=\"0 0 10 7\" {...props}>\n    <path\n      fill={fill}\n      fillRule=\"evenodd\"\n      d=\"M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z\"\n    />\n  </svg>\n)\n\nCheckIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.number\n}\n\nconst isControlled = component => {\n  return {}.hasOwnProperty.call(component.props, 'checked')\n}\n\nexport default class Switch extends PureComponent {\n  static propTypes = {\n    ...position.propTypes,\n    ...layout.propTypes,\n    ...spacing.propTypes,\n    id: PropTypes.string,\n    name: PropTypes.string,\n    label: PropTypes.node,\n    value: PropTypes.string,\n    height: PropTypes.number,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    isInvalid: PropTypes.bool,\n    appearance: PropTypes.oneOf(Object.keys(SwitchAppearances)),\n    hasCheckIcon: PropTypes.bool,\n    defaultChecked: PropTypes.bool\n  }\n\n  static defaultProps = {\n    height: 16,\n    onChange: () => {},\n    appearance: 'default',\n    hasCheckIcon: true\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      checked: props.checked || props.defaultChecked || false\n    }\n  }\n\n  handleChange = value => {\n    if (isControlled(this)) {\n      this.props.onChange(value)\n    } else {\n      this.setState({\n        checked: !this.state.checked\n      })\n      this.props.onChange(value)\n    }\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      height,\n      checked: checkedProps,\n      onChange,\n      disabled,\n      appearance,\n      hasCheckIcon,\n      defaultChecked,\n      ...props\n    } = this.props\n    const checked = isControlled(this) ? checkedProps : this.state.checked\n    const appearanceStyle = SwitchAppearances[appearance]\n\n    return (\n      <Box is=\"label\" display=\"block\" width={height * 2} {...props}>\n        <Box\n          is=\"input\"\n          id={id}\n          name={name}\n          type=\"checkbox\"\n          checked={checked}\n          disabled={disabled}\n          defaultChecked={defaultChecked}\n          onChange={this.handleChange}\n          css={appearanceStyle}\n        />\n        <Box onClick={this.handleClick} height={height} width={height * 2}>\n          <Box\n            height={height}\n            width={height}\n            data-checked={checked}\n            css={iconContainerStyle}\n          >\n            {hasCheckIcon && <CheckIcon size={height / 2 - 3} />}\n          </Box>\n          <Box\n            width={height * 2}\n            display=\"flex\"\n            data-checked={checked}\n            css={handleContainerStyle}\n          >\n            <Box flex={1} padding={2}>\n              <Box width={height - 4} height={height - 4} css={handleStyle} />\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}