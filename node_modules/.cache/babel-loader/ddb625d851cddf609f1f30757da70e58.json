{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from '../../typography';\nimport { getTextStyleForControlHeight, selectableTabStyle } from '../../shared-styles';\n\nvar Tab = function (_PureComponent) {\n  _inherits(Tab, _PureComponent);\n\n  function Tab() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Tab);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Tab.__proto__ || Object.getPrototypeOf(Tab)).call.apply(_ref, [this].concat(args))), _this), _this.handleClick = function (e) {\n      _this.props.onClick(e);\n\n      _this.props.onSelect();\n    }, _this.handleKeyPress = function (e) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        _this.props.onSelect();\n\n        e.preventDefault();\n      }\n\n      _this.props.onKeyPress(e);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Tab, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          is = _props.is,\n          height = _props.height,\n          css = _props.css,\n          onSelect = _props.onSelect,\n          isSelected = _props.isSelected,\n          props = _objectWithoutProperties(_props, ['is', 'height', 'css', 'onSelect', 'isSelected']);\n\n      var textStyle = getTextStyleForControlHeight({\n        height: height\n      });\n      var elementBasedProps = void 0;\n\n      if (is === 'a') {\n        // Use aria-current when it's a link\n        // https://tink.uk/using-the-aria-current-attribute/\n        elementBasedProps = isSelected ? {\n          'aria-current': 'page'\n        } : {};\n      } else {\n        // Use a role=\"tablist\" around the tabs\n        // Also pass down a aria-controls=\"panelId\"\n        // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/\n        elementBasedProps = {\n          'aria-selected': isSelected,\n          role: 'tab'\n        };\n      }\n\n      return React.createElement(Text, _extends({\n        is: is\n      }, textStyle, {\n        height: height\n      }, Tab.styles, props, {\n        onClick: this.handleClick,\n        onKeyPress: this.handleKeyPress\n      }, elementBasedProps, {\n        css: css ? _extends({}, selectableTabStyle, css) : selectableTabStyle\n      }));\n    }\n  }]);\n\n  return Tab;\n}(PureComponent);\n\nTab.propTypes = _extends({}, Text.propTypes, {\n  onSelect: PropTypes.func,\n  isSelected: PropTypes.bool\n});\nTab.defaultProps = {\n  onClick: function onClick() {},\n  onSelect: function onSelect() {},\n  onKeyPress: function onKeyPress() {},\n  is: 'span',\n  height: 28\n};\nTab.styles = {\n  display: 'inline-flex',\n  fontWeight: 500,\n  paddingX: 8,\n  marginX: 4,\n  borderRadius: 3,\n  lineHeight: '28px',\n  alignItems: 'center',\n  justifyContent: 'center',\n  textDecoration: 'none',\n  tabIndex: 0\n};\nexport default Tab;","map":{"version":3,"sources":["../../../src/tabs/src/Tab.js"],"names":["Tab","PureComponent","propTypes","Text","onSelect","PropTypes","func","isSelected","bool","defaultProps","onClick","onKeyPress","is","height","styles","display","fontWeight","paddingX","marginX","borderRadius","lineHeight","alignItems","justifyContent","textDecoration","tabIndex","handleClick","handleKeyPress","e","css","props","textStyle","getTextStyleForControlHeight","elementBasedProps","role","selectableTabStyle"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Text } from '../../typography'\nimport {\n  getTextStyleForControlHeight,\n  selectableTabStyle\n} from '../../shared-styles'\n\nexport default class Tab extends PureComponent {\n  static propTypes = {\n    ...Text.propTypes,\n    onSelect: PropTypes.func,\n    isSelected: PropTypes.bool\n  }\n\n  static defaultProps = {\n    onClick: () => {},\n    onSelect: () => {},\n    onKeyPress: () => {},\n    is: 'span',\n    height: 28\n  }\n\n  static styles = {\n    display: 'inline-flex',\n    fontWeight: 500,\n    paddingX: 8,\n    marginX: 4,\n    borderRadius: 3,\n    lineHeight: '28px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textDecoration: 'none',\n    tabIndex: 0\n  }\n\n  handleClick = e => {\n    this.props.onClick(e)\n    this.props.onSelect()\n  }\n\n  handleKeyPress = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      this.props.onSelect()\n      e.preventDefault()\n    }\n    this.props.onKeyPress(e)\n  }\n\n  render() {\n    const { is, height, css, onSelect, isSelected, ...props } = this.props\n    const textStyle = getTextStyleForControlHeight({ height })\n\n    let elementBasedProps\n    if (is === 'a') {\n      // Use aria-current when it's a link\n      // https://tink.uk/using-the-aria-current-attribute/\n      elementBasedProps = isSelected\n        ? {\n            'aria-current': 'page'\n          }\n        : {}\n    } else {\n      // Use a role=\"tablist\" around the tabs\n      // Also pass down a aria-controls=\"panelId\"\n      // https://www.stefanjudis.com/blog/aria-selected-and-when-to-use-it/\n      elementBasedProps = {\n        'aria-selected': isSelected,\n        role: 'tab'\n      }\n    }\n\n    return (\n      <Text\n        is={is}\n        {...textStyle}\n        height={height}\n        {...Tab.styles}\n        {...props}\n        onClick={this.handleClick}\n        onKeyPress={this.handleKeyPress}\n        {...elementBasedProps}\n        css={\n          css\n            ? {\n                ...selectableTabStyle,\n                ...css\n              }\n            : selectableTabStyle\n        }\n      />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}