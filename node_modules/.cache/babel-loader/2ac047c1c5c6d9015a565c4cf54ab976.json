{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'ui-box';\nimport { Pane } from '../../layers';\nimport { Heading } from '../../typography';\nimport { Overlay } from '../../overlay';\nimport { Button, IconButton } from '../../buttons';\nvar animationEasing = {\n  deceleration: 'cubic-bezier(0.0, 0.0, 0.2, 1)',\n  acceleration: 'cubic-bezier(0.4, 0.0, 1, 1)'\n};\nvar ANIMATION_DURATION = 200;\nvar openAnimation = css.keyframes('openAnimation', {\n  from: {\n    transform: 'scale(0.8)',\n    opacity: 0\n  },\n  to: {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n});\nvar closeAnimation = css.keyframes('closeAnimation', {\n  from: {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  to: {\n    transform: 'scale(0.8)',\n    opacity: 0\n  }\n});\nvar animationStyles = {\n  '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n    animation: openAnimation + ' ' + ANIMATION_DURATION + 'ms ' + animationEasing.deceleration + ' both'\n  },\n  '&[data-state=\"exiting\"]': {\n    animation: closeAnimation + ' ' + ANIMATION_DURATION + 'ms ' + animationEasing.acceleration + ' both'\n  }\n};\n\nvar Dialog = function (_React$Component) {\n  _inherits(Dialog, _React$Component);\n\n  function Dialog() {\n    _classCallCheck(this, Dialog);\n\n    return _possibleConstructorReturn(this, (Dialog.__proto__ || Object.getPrototypeOf(Dialog)).apply(this, arguments));\n  }\n\n  _createClass(Dialog, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          title = _props.title,\n          width = _props.width,\n          type = _props.type,\n          isShown = _props.isShown,\n          children = _props.children,\n          topOffset = _props.topOffset,\n          hasHeader = _props.hasHeader,\n          hasFooter = _props.hasFooter,\n          hasCancel = _props.hasCancel,\n          onCloseComplete = _props.onCloseComplete,\n          onOpenComplete = _props.onOpenComplete,\n          onConfirm = _props.onConfirm,\n          confirmLabel = _props.confirmLabel,\n          isConfirmLoading = _props.isConfirmLoading,\n          isConfirmDisabled = _props.isConfirmDisabled,\n          onCancel = _props.onCancel,\n          cancelLabel = _props.cancelLabel,\n          containerProps = _props.containerProps,\n          minHeightContent = _props.minHeightContent,\n          props = _objectWithoutProperties(_props, ['title', 'width', 'type', 'isShown', 'children', 'topOffset', 'hasHeader', 'hasFooter', 'hasCancel', 'onCloseComplete', 'onOpenComplete', 'onConfirm', 'confirmLabel', 'isConfirmLoading', 'isConfirmDisabled', 'onCancel', 'cancelLabel', 'containerProps', 'minHeightContent']);\n\n      var maxHeight = void 0;\n\n      if (Number.isInteger(topOffset)) {\n        maxHeight = 'calc(100% - ' + topOffset + 'px)';\n      } else {\n        maxHeight = 'calc(100% - ' + topOffset + ')';\n      }\n\n      var buttonAppearance = void 0;\n\n      if (type === 'default') {\n        buttonAppearance = 'green';\n      } else if (type === 'danger') {\n        buttonAppearance = 'red';\n      }\n\n      return React.createElement(Overlay, _extends({\n        isShown: isShown,\n        onExited: onCloseComplete,\n        onEntered: onOpenComplete\n      }, props), function (_ref) {\n        var state = _ref.state,\n            close = _ref.close;\n        return React.createElement(Pane, {\n          boxSizing: 'border-box',\n          display: 'flex',\n          justifyContent: 'center',\n          paddingTop: topOffset,\n          maxHeight: maxHeight\n        }, React.createElement(Pane, _extends({\n          role: 'dialog',\n          backgroundColor: 'white',\n          elevation: 4,\n          borderRadius: 8,\n          width: width,\n          display: 'flex',\n          flexDirection: 'column',\n          css: animationStyles,\n          'data-state': state\n        }, containerProps), hasHeader && React.createElement(Pane, {\n          padding: 16,\n          flexShrink: 0,\n          borderBottom: 'extraMuted',\n          display: 'flex',\n          alignItems: 'center'\n        }, React.createElement(Heading, {\n          is: 'h4',\n          size: 600,\n          flex: '1'\n        }, title), React.createElement(IconButton, {\n          appearance: 'ghost',\n          icon: 'close',\n          onClick: close\n        })), React.createElement(Pane, {\n          'data-state': state,\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column'\n        }, React.createElement(Pane, {\n          overflowY: 'auto',\n          padding: 16,\n          minHeight: minHeightContent\n        }, typeof children === 'function' ? children({\n          close: close\n        }) : children), hasFooter && React.createElement(Pane, {\n          flexShrink: 0,\n          padding: 16,\n          borderTop: 'extraMuted',\n          display: 'flex',\n          flexDirection: 'row-reverse'\n        }, React.createElement(Button, {\n          marginLeft: 8,\n          appearance: buttonAppearance,\n          isLoading: isConfirmLoading,\n          disabled: isConfirmDisabled,\n          onClick: function onClick() {\n            return onConfirm(close);\n          }\n        }, confirmLabel), hasCancel && React.createElement(Button, {\n          onClick: close\n        }, cancelLabel)))));\n      });\n    }\n  }]);\n\n  return Dialog;\n}(React.Component);\n\nDialog.propTypes = {\n  /**\n   * Children can be a node or a function accepting `({ close })`.\n   * See an example to understand how this works.\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n  /**\n   * When true, the dialog is shown.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Title of the Dialog. Titles should use Title Case.\n   */\n  title: PropTypes.node,\n\n  /**\n   * When true, the header with the title and close icon button is shown.\n   */\n  hasHeader: PropTypes.bool,\n\n  /**\n   * When true, the footer with the cancel and confirm button is shown.\n   */\n  hasFooter: PropTypes.bool,\n\n  /**\n   * When true, the cancel button is shown.\n   */\n  hasCancel: PropTypes.bool,\n\n  /**\n   * Function that will be called when the exit transition is complete.\n   */\n  onCloseComplete: PropTypes.func,\n\n  /**\n   * Function that will be called when the enter transition is complete.\n   */\n  onOpenComplete: PropTypes.func,\n\n  /**\n   * Function that will be called when the confirm button is clicked.\n   * This does not close the Dialog. A close function will be passed\n   * as a paramater you can use to close the dialog.\n   *\n   * `onConfirm={(close) => close()}`\n   */\n  onConfirm: PropTypes.func,\n\n  /**\n   * Label of the confirm button.\n   */\n  confirmLabel: PropTypes.string,\n\n  /**\n   * The type of the message.\n   */\n  type: PropTypes.oneOf(['default', 'danger']),\n\n  /**\n   * When true, the confirm button is set to loading.\n   */\n  isConfirmLoading: PropTypes.bool,\n\n  /**\n   * When true, the confirm button is set to disabled.\n   */\n  isConfirmDisabled: PropTypes.bool,\n\n  /**\n   * Function that will be called when the cancel button is clicked.\n   * This closes the Dialog by default.\n   *\n   * `onCancel={(close) => close()}`\n   */\n  onCancel: PropTypes.func,\n\n  /**\n   * Label of the cancel button.\n   */\n  cancelLabel: PropTypes.string,\n\n  /**\n   * Width of the Dialog.\n   */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The space above the dialog.\n   * This offset is also used at the bottom when there is not enough space\n   * available on screen â€” and the dialog scrolls internally.\n   */\n  topOffset: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * The min height of the body content.\n   * Makes it less weird when only showing little content.\n   */\n  minHeightContent: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Props that are passed to the dialog container.\n   */\n  containerProps: PropTypes.object\n};\nDialog.defaultProps = {\n  isShown: false,\n  hasHeader: true,\n  hasFooter: true,\n  hasCancel: true,\n  type: 'default',\n  width: 560,\n  topOffset: '12vh',\n  minHeightContent: 114,\n  confirmLabel: 'Confirm',\n  isConfirmLoading: false,\n  isConfirmDisabled: false,\n  cancelLabel: 'Cancel',\n  onCancel: function onCancel(close) {\n    return close();\n  },\n  onConfirm: function onConfirm(close) {\n    return close();\n  }\n};\nexport default Dialog;","map":{"version":3,"sources":["../../../src/dialog/src/Dialog.js"],"names":["animationEasing","deceleration","acceleration","ANIMATION_DURATION","openAnimation","from","transform","opacity","to","closeAnimation","animationStyles","animation","Dialog","React","Component","propTypes","children","PropTypes","isShown","title","hasHeader","hasFooter","hasCancel","onCloseComplete","onOpenComplete","onConfirm","confirmLabel","type","isConfirmLoading","isConfirmDisabled","onCancel","cancelLabel","width","topOffset","minHeightContent","containerProps","object","defaultProps","close","props","maxHeight","Number","buttonAppearance","state"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,SAAA,GAAA,QAAA,QAAA;AACA,SAAA,IAAA,QAAA,cAAA;AACA,SAAA,OAAA,QAAA,kBAAA;AACA,SAAA,OAAA,QAAA,eAAA;AACA,SAAA,MAAA,EAAA,UAAA,QAAA,eAAA;AAEA,IAAMA,eAAAA,GAAkB;AACtBC,EAAAA,YAAAA,EADsB,gCAAA;AAEtBC,EAAAA,YAAAA,EAAAA;AAFsB,CAAxB;AAKA,IAAMC,kBAAAA,GAAN,GAAA;AAEA,IAAMC,aAAAA,GAAgB,GAAA,CAAA,SAAA,CAAA,eAAA,EAA+B;AACnDC,EAAAA,IAAAA,EAAM;AACJC,IAAAA,SAAAA,EADI,YAAA;AAEJC,IAAAA,OAAAA,EAAS;AAFL,GAD6C;AAKnDC,EAAAA,EAAAA,EAAI;AACFF,IAAAA,SAAAA,EADE,UAAA;AAEFC,IAAAA,OAAAA,EAAS;AAFP;AAL+C,CAA/B,CAAtB;AAWA,IAAME,cAAAA,GAAiB,GAAA,CAAA,SAAA,CAAA,gBAAA,EAAgC;AACrDJ,EAAAA,IAAAA,EAAM;AACJC,IAAAA,SAAAA,EADI,UAAA;AAEJC,IAAAA,OAAAA,EAAS;AAFL,GAD+C;AAKrDC,EAAAA,EAAAA,EAAI;AACFF,IAAAA,SAAAA,EADE,YAAA;AAEFC,IAAAA,OAAAA,EAAS;AAFP;AALiD,CAAhC,CAAvB;AAWA,IAAMG,eAAAA,GAAkB;AACtB,uDAAqD;AACnDC,IAAAA,SAAAA,EAAcP,aAAdO,GAAAA,GAAcP,GAAdO,kBAAcP,GAAdO,KAAcP,GACZJ,eAAAA,CADFW,YAAcP,GAAdO;AADmD,GAD/B;AAMtB,6BAA2B;AACzBA,IAAAA,SAAAA,EAAcF,cAAdE,GAAAA,GAAcF,GAAdE,kBAAcF,GAAdE,KAAcF,GACZT,eAAAA,CADFW,YAAcF,GAAdE;AADyB;AANL,CAAxB;;IAaMC,M;;;;;;;;;;;6BA8HK;AAAA,UAAA,MAAA,GAsBH,KAtBG,KAAA;AAAA,UAELO,KAFK,GAAA,MAAA,CAAA,KAAA;AAAA,UAGLa,KAHK,GAAA,MAAA,CAAA,KAAA;AAAA,UAILL,IAJK,GAAA,MAAA,CAAA,IAAA;AAAA,UAKLT,OALK,GAAA,MAAA,CAAA,OAAA;AAAA,UAMLF,QANK,GAAA,MAAA,CAAA,QAAA;AAAA,UAOLiB,SAPK,GAAA,MAAA,CAAA,SAAA;AAAA,UAQLb,SARK,GAAA,MAAA,CAAA,SAAA;AAAA,UASLC,SATK,GAAA,MAAA,CAAA,SAAA;AAAA,UAULC,SAVK,GAAA,MAAA,CAAA,SAAA;AAAA,UAWLC,eAXK,GAAA,MAAA,CAAA,eAAA;AAAA,UAYLC,cAZK,GAAA,MAAA,CAAA,cAAA;AAAA,UAaLC,SAbK,GAAA,MAAA,CAAA,SAAA;AAAA,UAcLC,YAdK,GAAA,MAAA,CAAA,YAAA;AAAA,UAeLE,gBAfK,GAAA,MAAA,CAAA,gBAAA;AAAA,UAgBLC,iBAhBK,GAAA,MAAA,CAAA,iBAAA;AAAA,UAiBLC,QAjBK,GAAA,MAAA,CAAA,QAAA;AAAA,UAkBLC,WAlBK,GAAA,MAAA,CAAA,WAAA;AAAA,UAmBLI,cAnBK,GAAA,MAAA,CAAA,cAAA;AAAA,UAoBLD,gBApBK,GAAA,MAAA,CAAA,gBAAA;AAAA,UAqBFK,KArBE,GAAA,wBAAA,CAAA,MAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,SAAA,EAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,WAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,WAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,mBAAA,EAAA,UAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,kBAAA,CAAA,CAAA;;AAwBP,UAAIC,SAAAA,GAAAA,KAAJ,CAAA;;AACA,UAAIC,MAAAA,CAAAA,SAAAA,CAAJ,SAAIA,CAAJ,EAAiC;AAC/BD,QAAAA,SAAAA,GAAAA,iBAAAA,SAAAA,GAAAA,KAAAA;AADF,OAAA,MAEO;AACLA,QAAAA,SAAAA,GAAAA,iBAAAA,SAAAA,GAAAA,GAAAA;AACD;;AAED,UAAIE,gBAAAA,GAAAA,KAAJ,CAAA;;AACA,UAAIf,IAAAA,KAAJ,SAAA,EAAwB;AACtBe,QAAAA,gBAAAA,GAAAA,OAAAA;AADF,OAAA,MAEO,IAAIf,IAAAA,KAAJ,QAAA,EAAuB;AAC5Be,QAAAA,gBAAAA,GAAAA,KAAAA;AACD;;AAED,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AACE,QAAA,OAAA,EADF,OAAA;AAEE,QAAA,QAAA,EAFF,eAAA;AAGE,QAAA,SAAA,EAAWlB;AAHb,OAAA,EAAA,KAAA,CAAA,EAMG,UAAA,IAAA,EAAA;AAAA,YAAGmB,KAAH,GAAA,IAAA,CAAA,KAAA;AAAA,YAAUL,KAAV,GAAA,IAAA,CAAA,KAAA;AAAA,eACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,UAAA,SAAA,EADF,YAAA;AAEE,UAAA,OAAA,EAFF,MAAA;AAGE,UAAA,cAAA,EAHF,QAAA;AAIE,UAAA,UAAA,EAJF,SAAA;AAKE,UAAA,SAAA,EAAWE;AALb,SAAA,EAOE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,UAAA,IAAA,EADF,QAAA;AAEE,UAAA,eAAA,EAFF,OAAA;AAGE,UAAA,SAAA,EAHF,CAAA;AAIE,UAAA,YAAA,EAJF,CAAA;AAKE,UAAA,KAAA,EALF,KAAA;AAME,UAAA,OAAA,EANF,MAAA;AAOE,UAAA,aAAA,EAPF,QAAA;AAQE,UAAA,GAAA,EARF,eAAA;AASE,wBAAYG;AATd,SAAA,EAAA,cAAA,CAAA,EAYGvB,SAAAA,IACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,UAAA,OAAA,EADF,EAAA;AAEE,UAAA,UAAA,EAFF,CAAA;AAGE,UAAA,YAAA,EAHF,YAAA;AAIE,UAAA,OAAA,EAJF,MAAA;AAKE,UAAA,UAAA,EAAW;AALb,SAAA,EAOE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAS,UAAA,EAAA,EAAT,IAAA;AAAiB,UAAA,IAAA,EAAjB,GAAA;AAA4B,UAAA,IAAA,EAA5B;AAAA,SAAA,EACGD,KADH,CAPF,EAUE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAY,UAAA,UAAA,EAAZ,OAAA;AAA+B,UAAA,IAAA,EAA/B,OAAA;AAA4C,UAAA,OAAA,EAA5C;AAAA,SAAA,CAVF,CAbJ,EA2BE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,wBADF,KAAA;AAEE,UAAA,IAAA,EAFF,CAAA;AAGE,UAAA,OAAA,EAHF,MAAA;AAIE,UAAA,aAAA,EAAc;AAJhB,SAAA,EAME,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,UAAA,SAAA,EADF,MAAA;AAEE,UAAA,OAAA,EAFF,EAAA;AAGE,UAAA,SAAA,EAAWe;AAHb,SAAA,EAKG,OAAA,QAAA,KAAA,UAAA,GACG,QAAA,CAAS;AACPI,UAAAA,KAAAA,EAAAA;AADO,SAAT,CADH,GAIGtB,QATN,CANF,EAkBGK,SAAAA,IACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,UAAA,UAAA,EADF,CAAA;AAEE,UAAA,OAAA,EAFF,EAAA;AAGE,UAAA,SAAA,EAHF,YAAA;AAIE,UAAA,OAAA,EAJF,MAAA;AAKE,UAAA,aAAA,EAAc;AALhB,SAAA,EAOE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,UAAA,UAAA,EADF,CAAA;AAEE,UAAA,UAAA,EAFF,gBAAA;AAGE,UAAA,SAAA,EAHF,gBAAA;AAIE,UAAA,QAAA,EAJF,iBAAA;AAKE,UAAA,OAAA,EAAS,SAAA,OAAA,GAAA;AAAA,mBAAMI,SAAAA,CAAN,KAAMA,CAAN;AAAA;AALX,SAAA,EAOGC,YAPH,CAPF,EAgBGJ,SAAAA,IACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAQ,UAAA,OAAA,EAAR;AAAA,SAAA,EAAyBS,WAAzB,CAjBJ,CAnBJ,CA3BF,CAPF,CADD;AAAA,OANH,CADF;AAwFD;;;;EA5PkBlB,KAAAA,CAAMC,S;;AAArBF,M,CACGG,SADHH,GACe;AACjB;;;;AAIAI,EAAAA,QAAAA,EAAUC,SAAAA,CAAAA,SAAAA,CAAoB,CAACA,SAAAA,CAAD,IAAA,EAAiBA,SAAAA,CAArCA,IAAoB,CAApBA,EALO,UAAA;;AAOjB;;;AAGAC,EAAAA,OAAAA,EAASD,SAAAA,CAVQ,IAAA;;AAYjB;;;AAGAE,EAAAA,KAAAA,EAAOF,SAAAA,CAfU,IAAA;;AAiBjB;;;AAGAG,EAAAA,SAAAA,EAAWH,SAAAA,CApBM,IAAA;;AAsBjB;;;AAGAI,EAAAA,SAAAA,EAAWJ,SAAAA,CAzBM,IAAA;;AA2BjB;;;AAGAK,EAAAA,SAAAA,EAAWL,SAAAA,CA9BM,IAAA;;AAgCjB;;;AAGAM,EAAAA,eAAAA,EAAiBN,SAAAA,CAnCA,IAAA;;AAqCjB;;;AAGAO,EAAAA,cAAAA,EAAgBP,SAAAA,CAxCC,IAAA;;AA0CjB;;;;;;;AAOAQ,EAAAA,SAAAA,EAAWR,SAAAA,CAjDM,IAAA;;AAmDjB;;;AAGAS,EAAAA,YAAAA,EAAcT,SAAAA,CAtDG,MAAA;;AAwDjB;;;AAGAU,EAAAA,IAAAA,EAAMV,SAAAA,CAAAA,KAAAA,CAAgB,CAAA,SAAA,EA3DL,QA2DK,CAAhBA,CA3DW;;AA6DjB;;;AAGAW,EAAAA,gBAAAA,EAAkBX,SAAAA,CAhED,IAAA;;AAkEjB;;;AAGAY,EAAAA,iBAAAA,EAAmBZ,SAAAA,CArEF,IAAA;;AAuEjB;;;;;;AAMAa,EAAAA,QAAAA,EAAUb,SAAAA,CA7EO,IAAA;;AA+EjB;;;AAGAc,EAAAA,WAAAA,EAAad,SAAAA,CAlFI,MAAA;;AAoFjB;;;AAGAe,EAAAA,KAAAA,EAAOf,SAAAA,CAAAA,SAAAA,CAAoB,CAACA,SAAAA,CAAD,MAAA,EAAmBA,SAAAA,CAvF7B,MAuFU,CAApBA,CAvFU;;AAyFjB;;;;;AAKAgB,EAAAA,SAAAA,EAAWhB,SAAAA,CAAAA,SAAAA,CAAoB,CAACA,SAAAA,CAAD,MAAA,EAAmBA,SAAAA,CA9FjC,MA8Fc,CAApBA,CA9FM;;AAgGjB;;;;AAIAiB,EAAAA,gBAAAA,EAAkBjB,SAAAA,CAAAA,SAAAA,CAAoB,CAACA,SAAAA,CAAD,MAAA,EAAmBA,SAAAA,CApGxC,MAoGqB,CAApBA,CApGD;;AAsGjB;;;AAGAkB,EAAAA,cAAAA,EAAgBlB,SAAAA,CAAUmB;AAzGT,CADfxB;AAAAA,M,CA6GGyB,YA7GHzB,GA6GkB;AACpBM,EAAAA,OAAAA,EADoB,KAAA;AAEpBE,EAAAA,SAAAA,EAFoB,IAAA;AAGpBC,EAAAA,SAAAA,EAHoB,IAAA;AAIpBC,EAAAA,SAAAA,EAJoB,IAAA;AAKpBK,EAAAA,IAAAA,EALoB,SAAA;AAMpBK,EAAAA,KAAAA,EANoB,GAAA;AAOpBC,EAAAA,SAAAA,EAPoB,MAAA;AAQpBC,EAAAA,gBAAAA,EARoB,GAAA;AASpBR,EAAAA,YAAAA,EAToB,SAAA;AAUpBE,EAAAA,gBAAAA,EAVoB,KAAA;AAWpBC,EAAAA,iBAAAA,EAXoB,KAAA;AAYpBE,EAAAA,WAAAA,EAZoB,QAAA;AAapBD,EAAAA,QAAAA,EAAU,SAAA,QAAA,CAAA,KAAA,EAAA;AAAA,WAASQ,KAAT,EAAA;AAbU,GAAA;AAcpBb,EAAAA,SAAAA,EAAW,SAAA,SAAA,CAAA,KAAA,EAAA;AAAA,WAASa,KAAT,EAAA;AAAA;AAdS,CA7GlB1B;AA+PN,eAAA,MAAA","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { css } from 'ui-box'\nimport { Pane } from '../../layers'\nimport { Heading } from '../../typography'\nimport { Overlay } from '../../overlay'\nimport { Button, IconButton } from '../../buttons'\n\nconst animationEasing = {\n  deceleration: `cubic-bezier(0.0, 0.0, 0.2, 1)`,\n  acceleration: `cubic-bezier(0.4, 0.0, 1, 1)`\n}\n\nconst ANIMATION_DURATION = 200\n\nconst openAnimation = css.keyframes('openAnimation', {\n  from: {\n    transform: 'scale(0.8)',\n    opacity: 0\n  },\n  to: {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n})\n\nconst closeAnimation = css.keyframes('closeAnimation', {\n  from: {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  to: {\n    transform: 'scale(0.8)',\n    opacity: 0\n  }\n})\n\nconst animationStyles = {\n  '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n    animation: `${openAnimation} ${ANIMATION_DURATION}ms ${\n      animationEasing.deceleration\n    } both`\n  },\n  '&[data-state=\"exiting\"]': {\n    animation: `${closeAnimation} ${ANIMATION_DURATION}ms ${\n      animationEasing.acceleration\n    } both`\n  }\n}\n\nclass Dialog extends React.Component {\n  static propTypes = {\n    /**\n     * Children can be a node or a function accepting `({ close })`.\n     * See an example to understand how this works.\n     */\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n    /**\n     * When true, the dialog is shown.\n     */\n    isShown: PropTypes.bool,\n\n    /**\n     * Title of the Dialog. Titles should use Title Case.\n     */\n    title: PropTypes.node,\n\n    /**\n     * When true, the header with the title and close icon button is shown.\n     */\n    hasHeader: PropTypes.bool,\n\n    /**\n     * When true, the footer with the cancel and confirm button is shown.\n     */\n    hasFooter: PropTypes.bool,\n\n    /**\n     * When true, the cancel button is shown.\n     */\n    hasCancel: PropTypes.bool,\n\n    /**\n     * Function that will be called when the exit transition is complete.\n     */\n    onCloseComplete: PropTypes.func,\n\n    /**\n     * Function that will be called when the enter transition is complete.\n     */\n    onOpenComplete: PropTypes.func,\n\n    /**\n     * Function that will be called when the confirm button is clicked.\n     * This does not close the Dialog. A close function will be passed\n     * as a paramater you can use to close the dialog.\n     *\n     * `onConfirm={(close) => close()}`\n     */\n    onConfirm: PropTypes.func,\n\n    /**\n     * Label of the confirm button.\n     */\n    confirmLabel: PropTypes.string,\n\n    /**\n     * The type of the message.\n     */\n    type: PropTypes.oneOf(['default', 'danger']),\n\n    /**\n     * When true, the confirm button is set to loading.\n     */\n    isConfirmLoading: PropTypes.bool,\n\n    /**\n     * When true, the confirm button is set to disabled.\n     */\n    isConfirmDisabled: PropTypes.bool,\n\n    /**\n     * Function that will be called when the cancel button is clicked.\n     * This closes the Dialog by default.\n     *\n     * `onCancel={(close) => close()}`\n     */\n    onCancel: PropTypes.func,\n\n    /**\n     * Label of the cancel button.\n     */\n    cancelLabel: PropTypes.string,\n\n    /**\n     * Width of the Dialog.\n     */\n    width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n    /**\n     * The space above the dialog.\n     * This offset is also used at the bottom when there is not enough space\n     * available on screen â€” and the dialog scrolls internally.\n     */\n    topOffset: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n    /**\n     * The min height of the body content.\n     * Makes it less weird when only showing little content.\n     */\n    minHeightContent: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n    /**\n     * Props that are passed to the dialog container.\n     */\n    containerProps: PropTypes.object\n  }\n\n  static defaultProps = {\n    isShown: false,\n    hasHeader: true,\n    hasFooter: true,\n    hasCancel: true,\n    type: 'default',\n    width: 560,\n    topOffset: '12vh',\n    minHeightContent: 114,\n    confirmLabel: 'Confirm',\n    isConfirmLoading: false,\n    isConfirmDisabled: false,\n    cancelLabel: 'Cancel',\n    onCancel: close => close(),\n    onConfirm: close => close()\n  }\n\n  render() {\n    const {\n      title,\n      width,\n      type,\n      isShown,\n      children,\n      topOffset,\n      hasHeader,\n      hasFooter,\n      hasCancel,\n      onCloseComplete,\n      onOpenComplete,\n      onConfirm,\n      confirmLabel,\n      isConfirmLoading,\n      isConfirmDisabled,\n      onCancel,\n      cancelLabel,\n      containerProps,\n      minHeightContent,\n      ...props\n    } = this.props\n\n    let maxHeight\n    if (Number.isInteger(topOffset)) {\n      maxHeight = `calc(100% - ${topOffset}px)`\n    } else {\n      maxHeight = `calc(100% - ${topOffset})`\n    }\n\n    let buttonAppearance\n    if (type === 'default') {\n      buttonAppearance = 'green'\n    } else if (type === 'danger') {\n      buttonAppearance = 'red'\n    }\n\n    return (\n      <Overlay\n        isShown={isShown}\n        onExited={onCloseComplete}\n        onEntered={onOpenComplete}\n        {...props}\n      >\n        {({ state, close }) => (\n          <Pane\n            boxSizing=\"border-box\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            paddingTop={topOffset}\n            maxHeight={maxHeight}\n          >\n            <Pane\n              role=\"dialog\"\n              backgroundColor=\"white\"\n              elevation={4}\n              borderRadius={8}\n              width={width}\n              display=\"flex\"\n              flexDirection=\"column\"\n              css={animationStyles}\n              data-state={state}\n              {...containerProps}\n            >\n              {hasHeader && (\n                <Pane\n                  padding={16}\n                  flexShrink={0}\n                  borderBottom=\"extraMuted\"\n                  display=\"flex\"\n                  alignItems=\"center\"\n                >\n                  <Heading is=\"h4\" size={600} flex=\"1\">\n                    {title}\n                  </Heading>\n                  <IconButton appearance=\"ghost\" icon=\"close\" onClick={close} />\n                </Pane>\n              )}\n\n              <Pane\n                data-state={state}\n                flex={1}\n                display=\"flex\"\n                flexDirection=\"column\"\n              >\n                <Pane\n                  overflowY=\"auto\"\n                  padding={16}\n                  minHeight={minHeightContent}\n                >\n                  {typeof children === 'function'\n                    ? children({\n                        close\n                      })\n                    : children}\n                </Pane>\n\n                {hasFooter && (\n                  <Pane\n                    flexShrink={0}\n                    padding={16}\n                    borderTop=\"extraMuted\"\n                    display=\"flex\"\n                    flexDirection=\"row-reverse\"\n                  >\n                    <Button\n                      marginLeft={8}\n                      appearance={buttonAppearance}\n                      isLoading={isConfirmLoading}\n                      disabled={isConfirmDisabled}\n                      onClick={() => onConfirm(close)}\n                    >\n                      {confirmLabel}\n                    </Button>\n                    {hasCancel && (\n                      <Button onClick={close}>{cancelLabel}</Button>\n                    )}\n                  </Pane>\n                )}\n              </Pane>\n            </Pane>\n          </Pane>\n        )}\n      </Overlay>\n    )\n  }\n}\n\nexport default Dialog\n"]},"metadata":{},"sourceType":"module"}