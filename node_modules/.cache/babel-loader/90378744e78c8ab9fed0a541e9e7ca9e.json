{"ast":null,"code":"var _extends2;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { colors } from '../../../colors';\nimport baseStyle from './controlBaseStyle';\nvar disabledState = '&[disabled] + div';\nvar hoverState = '&:not([disabled]):hover + div';\nvar focusState = '&:not([disabled]):focus + div';\nvar activeState = '&:not([disabled]):active + div';\nvar checkedState = '&:checked + div';\nvar checkedActiveState = '&:not([disabled]):checked:active + div';\nvar checkedDisabledState = '&[disabled]:checked + div';\nvar hiddenCheckboxStyle = {\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  height: '1',\n  overflow: 'hidden',\n  padding: '0',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1',\n  opacity: '0'\n};\nvar CheckboxAppearances = {\n  default: _extends({}, hiddenCheckboxStyle, (_extends2 = {\n    '& + div > svg': {\n      display: 'none'\n    },\n    '& + div': _extends({}, baseStyle, {\n      color: 'white',\n      backgroundColor: 'white',\n      backgroundImage: 'linear-gradient(to top, ' + colors.neutral['5A'] + ', white)',\n      boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A']\n    })\n  }, _defineProperty(_extends2, disabledState, {\n    cursor: 'not-allowed',\n    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A'],\n    backgroundColor: colors.neutral['5A'],\n    backgroundImage: 'none'\n  }), _defineProperty(_extends2, hoverState, {\n    backgroundImage: 'linear-gradient(to top, ' + colors.neutral['7A'] + ', ' + colors.neutral['3A'] + ' )',\n    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['40A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['15A']\n  }), _defineProperty(_extends2, focusState, {\n    boxShadow: '0 0 0 2px ' + colors.blue['20A'] + ', inset 0 0 0 1px ' + colors.neutral['70A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A']\n  }), _defineProperty(_extends2, activeState, {\n    color: colors.blue['1000'],\n    backgroundImage: 'none',\n    backgroundColor: colors.blue['10A'],\n    boxShadow: 'inset 0 0 0 1px ' + colors.blue['80A']\n  }), _defineProperty(_extends2, checkedState, {\n    backgroundColor: colors.blue['500'],\n    color: 'white',\n    backgroundImage: 'linear-gradient(to top, ' + colors.blue['600'] + ', ' + colors.blue['400'] + ')',\n    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A'],\n    '& > svg': {\n      display: 'block'\n    }\n  }), _defineProperty(_extends2, checkedDisabledState, {\n    color: colors.neutral['300'],\n    backgroundColor: 'white',\n    backgroundImage: 'linear-gradient(to top, ' + colors.neutral['5A'] + ', white)',\n    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A'],\n    '& > svg': {\n      display: 'block'\n    }\n  }), _defineProperty(_extends2, checkedActiveState, {\n    backgroundColor: colors.blue['500'],\n    color: 'white',\n    backgroundImage: 'linear-gradient(to top, ' + colors.blue['800'] + ', ' + colors.blue['900'] + ')',\n    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A'],\n    '& > svg': {\n      display: 'block'\n    }\n  }), _extends2))\n};\nexport default CheckboxAppearances;","map":{"version":3,"sources":["../../../../src/shared-styles/src/styles/CheckboxAppearances.js"],"names":["disabledState","hoverState","focusState","activeState","checkedState","checkedActiveState","checkedDisabledState","hiddenCheckboxStyle","border","clip","height","overflow","padding","position","whiteSpace","width","opacity","CheckboxAppearances","default","display","color","backgroundColor","backgroundImage","colors","boxShadow","cursor"],"mappings":"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","sourcesContent":["import { colors } from '../../../colors'\nimport baseStyle from './controlBaseStyle'\n\nconst disabledState = '&[disabled] + div'\nconst hoverState = '&:not([disabled]):hover + div'\nconst focusState = '&:not([disabled]):focus + div'\nconst activeState = '&:not([disabled]):active + div'\nconst checkedState = '&:checked + div'\nconst checkedActiveState = '&:not([disabled]):checked:active + div'\nconst checkedDisabledState = '&[disabled]:checked + div'\n\nconst hiddenCheckboxStyle = {\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  height: '1',\n  overflow: 'hidden',\n  padding: '0',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1',\n  opacity: '0'\n}\n\nconst CheckboxAppearances = {\n  default: {\n    ...hiddenCheckboxStyle,\n    '& + div > svg': {\n      display: 'none'\n    },\n    '& + div': {\n      ...baseStyle,\n      color: 'white',\n      backgroundColor: 'white',\n      backgroundImage: `linear-gradient(to top, ${\n        colors.neutral['5A']\n      }, white)`,\n      boxShadow: `inset 0 0 0 1px ${\n        colors.neutral['20A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['10A']}`\n    },\n    [disabledState]: {\n      cursor: 'not-allowed',\n      boxShadow: `inset 0 0 0 1px ${colors.neutral['20A']}`,\n      backgroundColor: colors.neutral['5A'],\n      backgroundImage: 'none'\n    },\n    [hoverState]: {\n      backgroundImage: `linear-gradient(to top, ${colors.neutral['7A']}, ${\n        colors.neutral['3A']\n      } )`,\n      boxShadow: `inset 0 0 0 1px ${\n        colors.neutral['40A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['15A']}`\n    },\n    [focusState]: {\n      boxShadow: `0 0 0 2px ${colors.blue['20A']}, inset 0 0 0 1px ${\n        colors.neutral['70A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['10A']}`\n    },\n    [activeState]: {\n      color: colors.blue['1000'],\n      backgroundImage: 'none',\n      backgroundColor: colors.blue['10A'],\n      boxShadow: `inset 0 0 0 1px ${colors.blue['80A']}`\n    },\n    [checkedState]: {\n      backgroundColor: colors.blue['500'],\n      color: 'white',\n      backgroundImage: `linear-gradient(to top, ${colors.blue['600']}, ${\n        colors.blue['400']\n      })`,\n      boxShadow: `inset 0 0 0 1px ${\n        colors.neutral['30A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['30A']}`,\n      '& > svg': {\n        display: 'block'\n      }\n    },\n    [checkedDisabledState]: {\n      color: colors.neutral['300'],\n      backgroundColor: 'white',\n      backgroundImage: `linear-gradient(to top, ${\n        colors.neutral['5A']\n      }, white)`,\n      boxShadow: `inset 0 0 0 1px ${\n        colors.neutral['20A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['10A']}`,\n      '& > svg': {\n        display: 'block'\n      }\n    },\n    [checkedActiveState]: {\n      backgroundColor: colors.blue['500'],\n      color: 'white',\n      backgroundImage: `linear-gradient(to top, ${colors.blue['800']}, ${\n        colors.blue['900']\n      })`,\n      boxShadow: `inset 0 0 0 1px ${\n        colors.neutral['30A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['30A']}`,\n      '& > svg': {\n        display: 'block'\n      }\n    }\n  }\n}\n\nexport default CheckboxAppearances\n"]},"metadata":{},"sourceType":"module"}