{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Transition from 'react-transition-group/Transition';\nimport Box, { css } from 'ui-box';\nimport { Portal } from '../../portal';\nimport { colors } from '../../colors';\nvar animationEasing = {\n  standard: 'cubic-bezier(0.4, 0.0, 0.2, 1)',\n  deceleration: 'cubic-bezier(0.0, 0.0, 0.2, 1)',\n  acceleration: 'cubic-bezier(0.4, 0.0, 1, 1)',\n  sharp: 'cubic-bezier(0.4, 0.0, 0.6, 1)',\n  spring: 'cubic-bezier(0.175, 0.885, 0.320, 1.175)'\n};\nvar ANIMATION_DURATION = 240;\nvar fadeInAnimation = css.keyframes('fadeInAnimation', {\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nvar fadeOutAnimation = css.keyframes('fadeOutAnimation', {\n  from: {\n    opacity: 1\n  },\n  to: {\n    opacity: 0\n  }\n});\nvar animationStyles = {\n  '&::before': {\n    backgroundColor: colors.neutral['200A'],\n    left: 0,\n    top: 0,\n    position: 'fixed',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    content: '\" \"'\n  },\n  '&[data-state=\"entering\"]::before, &[data-state=\"entered\"]::before': {\n    animation: fadeInAnimation + ' ' + ANIMATION_DURATION + 'ms ' + animationEasing.deceleration + ' both'\n  },\n  '&[data-state=\"exiting\"]::before, &[data-state=\"exited\"]::before': {\n    animation: fadeOutAnimation + ' ' + ANIMATION_DURATION + 'ms ' + animationEasing.acceleration + ' both'\n  }\n  /**\n   * Overlay is essentially a wrapper around react-transition-group/Transition\n   * Learn more: https://reactcommunity.org/react-transition-group/\n   */\n\n};\n\nvar Overlay = function (_React$Component) {\n  _inherits(Overlay, _React$Component);\n\n  function Overlay(props) {\n    _classCallCheck(this, Overlay);\n\n    var _this = _possibleConstructorReturn(this, (Overlay.__proto__ || Object.getPrototypeOf(Overlay)).call(this, props));\n\n    _this.handleHidden = function (node) {\n      _this.setState({\n        exiting: false\n      });\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.handleBackdropClick = function (e) {\n      if (e.target !== e.currentTarget) {\n        return;\n      }\n\n      _this.setState({\n        exiting: true\n      });\n\n      _this.props.onHide();\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        exiting: true\n      });\n\n      _this.props.onHide();\n    };\n\n    _this.state = {\n      exiting: false\n    };\n    return _this;\n  }\n\n  _createClass(Overlay, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          _props$containerProps = _props.containerProps,\n          containerProps = _props$containerProps === undefined ? {} : _props$containerProps,\n          isShown = _props.isShown,\n          children = _props.children,\n          onExit = _props.onExit,\n          onExiting = _props.onExiting,\n          onEnter = _props.onEnter,\n          onEntering = _props.onEntering,\n          onEntered = _props.onEntered;\n      var exiting = this.state.exiting;\n      return React.createElement(Portal, null, React.createElement(Transition, {\n        appear: true,\n        unmountOnExit: true,\n        timeout: ANIMATION_DURATION,\n        'in': isShown && !exiting,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: this.handleHidden,\n        onEnter: onEnter,\n        onEntering: onEntering,\n        onEntered: onEntered\n      }, function (state) {\n        return React.createElement(Box, _extends({\n          onClick: _this2.handleBackdropClick,\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          zIndex: 40,\n          css: animationStyles,\n          'data-state': state\n        }, containerProps), typeof children === 'function' ? children({\n          state: state,\n          close: _this2.handleClose\n        }) : children);\n      }));\n    }\n  }]);\n\n  return Overlay;\n}(React.Component);\n\nOverlay.propTypes = {\n  /**\n   * Children can be a node or a function accepting `close: func`\n   * and `state: ENTERING | ENTERED | EXITING | EXITED`.\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Props to be passed through on the inner Box.\n   */\n  containerProps: PropTypes.object,\n\n  /**\n   * Callback fired as soon as backdrop is clicked or close is called.\n   * Might get deprecated over time. Use `onExited` instead.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   * type: `Function(node: HtmlElement) -> void`\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   * type: `Function(node: HtmlElement) -> void`\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   * type: `Function(exitState: Any?, node: HtmlElement) -> void`\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied.\n   * An extra parameter isAppearing is supplied to indicate if the enter stage\n   * is occurring on the initial mount.\n   *\n   * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied.\n   * An extra parameter isAppearing is supplied to indicate if the enter stage\n   * is occurring on the initial mount.\n   *\n   * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied.\n   * An extra parameter isAppearing is supplied to indicate if the enter stage\n   * is occurring on the initial mount.\n   *\n   * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n   */\n  onEntered: PropTypes.func\n};\nOverlay.defaultProps = {\n  onHide: function onHide() {},\n  onExit: function onExit() {},\n  onExiting: function onExiting() {},\n  onExited: function onExited() {},\n  onEnter: function onEnter() {},\n  onEntering: function onEntering() {},\n  onEntered: function onEntered() {}\n};\nexport default Overlay;","map":{"version":3,"sources":["../../../src/overlay/src/Overlay.js"],"names":["animationEasing","standard","deceleration","acceleration","sharp","spring","ANIMATION_DURATION","fadeInAnimation","from","opacity","to","fadeOutAnimation","animationStyles","backgroundColor","colors","left","top","position","display","width","height","content","animation","Overlay","React","Component","propTypes","children","PropTypes","isShown","containerProps","onHide","onExit","onExiting","onExited","onEnter","onEntering","onEntered","func","defaultProps","exiting","e","state","close","handleClose"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Transition from 'react-transition-group/Transition'\nimport Box, { css } from 'ui-box'\nimport { Portal } from '../../portal'\nimport { colors } from '../../colors'\n\nconst animationEasing = {\n  standard: `cubic-bezier(0.4, 0.0, 0.2, 1)`,\n  deceleration: `cubic-bezier(0.0, 0.0, 0.2, 1)`,\n  acceleration: `cubic-bezier(0.4, 0.0, 1, 1)`,\n  sharp: `cubic-bezier(0.4, 0.0, 0.6, 1)`,\n  spring: `cubic-bezier(0.175, 0.885, 0.320, 1.175)`\n}\n\nconst ANIMATION_DURATION = 240\n\nconst fadeInAnimation = css.keyframes('fadeInAnimation', {\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n})\n\nconst fadeOutAnimation = css.keyframes('fadeOutAnimation', {\n  from: {\n    opacity: 1\n  },\n  to: {\n    opacity: 0\n  }\n})\n\nconst animationStyles = {\n  '&::before': {\n    backgroundColor: colors.neutral['200A'],\n    left: 0,\n    top: 0,\n    position: 'fixed',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    content: '\" \"'\n  },\n  '&[data-state=\"entering\"]::before, &[data-state=\"entered\"]::before': {\n    animation: `${fadeInAnimation} ${ANIMATION_DURATION}ms ${\n      animationEasing.deceleration\n    } both`\n  },\n  '&[data-state=\"exiting\"]::before, &[data-state=\"exited\"]::before': {\n    animation: `${fadeOutAnimation} ${ANIMATION_DURATION}ms ${\n      animationEasing.acceleration\n    } both`\n  }\n}\n\n/**\n * Overlay is essentially a wrapper around react-transition-group/Transition\n * Learn more: https://reactcommunity.org/react-transition-group/\n */\nclass Overlay extends React.Component {\n  static propTypes = {\n    /**\n     * Children can be a node or a function accepting `close: func`\n     * and `state: ENTERING | ENTERED | EXITING | EXITED`.\n     */\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n    /**\n     * Show the component; triggers the enter or exit states.\n     */\n    isShown: PropTypes.bool,\n\n    /**\n     * Props to be passed through on the inner Box.\n     */\n    containerProps: PropTypes.object,\n\n    /**\n     * Callback fired as soon as backdrop is clicked or close is called.\n     * Might get deprecated over time. Use `onExited` instead.\n     */\n    onHide: PropTypes.func,\n\n    /**\n     * Callback fired before the \"exiting\" status is applied.\n     * type: `Function(node: HtmlElement) -> void`\n     */\n    onExit: PropTypes.func,\n\n    /**\n     * Callback fired after the \"exiting\" status is applied.\n     * type: `Function(node: HtmlElement) -> void`\n     */\n    onExiting: PropTypes.func,\n\n    /**\n     * Callback fired after the \"exited\" status is applied.\n     * type: `Function(exitState: Any?, node: HtmlElement) -> void`\n     */\n    onExited: PropTypes.func,\n\n    /**\n     * Callback fired before the \"entering\" status is applied.\n     * An extra parameter isAppearing is supplied to indicate if the enter stage\n     * is occurring on the initial mount.\n     *\n     * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n     */\n    onEnter: PropTypes.func,\n\n    /**\n     * Callback fired after the \"entering\" status is applied.\n     * An extra parameter isAppearing is supplied to indicate if the enter stage\n     * is occurring on the initial mount.\n     *\n     * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n     */\n    onEntering: PropTypes.func,\n\n    /**\n     * Callback fired after the \"entered\" status is applied.\n     * An extra parameter isAppearing is supplied to indicate if the enter stage\n     * is occurring on the initial mount.\n     *\n     * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n     */\n    onEntered: PropTypes.func\n  }\n\n  static defaultProps = {\n    onHide: () => {},\n    onExit: () => {},\n    onExiting: () => {},\n    onExited: () => {},\n    onEnter: () => {},\n    onEntering: () => {},\n    onEntered: () => {}\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      exiting: false\n    }\n  }\n\n  handleHidden = node => {\n    this.setState({ exiting: false })\n\n    if (this.props.onExited) {\n      this.props.onExited(node)\n    }\n  }\n\n  handleBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return\n    }\n\n    this.setState({ exiting: true })\n    this.props.onHide()\n  }\n\n  handleClose = () => {\n    this.setState({ exiting: true })\n    this.props.onHide()\n  }\n\n  render() {\n    const {\n      containerProps = {},\n      isShown,\n      children,\n      onExit,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = this.props\n\n    const { exiting } = this.state\n\n    return (\n      <Portal>\n        <Transition\n          appear\n          unmountOnExit\n          timeout={ANIMATION_DURATION}\n          in={isShown && !exiting}\n          onExit={onExit}\n          onExiting={onExiting}\n          onExited={this.handleHidden}\n          onEnter={onEnter}\n          onEntering={onEntering}\n          onEntered={onEntered}\n        >\n          {state => (\n            <Box\n              onClick={this.handleBackdropClick}\n              position=\"fixed\"\n              top={0}\n              left={0}\n              right={0}\n              bottom={0}\n              zIndex={40}\n              css={animationStyles}\n              data-state={state}\n              {...containerProps}\n            >\n              {typeof children === 'function'\n                ? children({\n                    state,\n                    close: this.handleClose\n                  })\n                : children}\n            </Box>\n          )}\n        </Transition>\n      </Portal>\n    )\n  }\n}\n\nexport default Overlay\n"]},"metadata":{},"sourceType":"module"}