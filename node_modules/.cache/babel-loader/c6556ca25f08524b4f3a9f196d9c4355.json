{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport LinkAppearances from './styles/LinkAppearances';\nimport Text from './Text';\n\nvar Link = function (_PureComponent) {\n  _inherits(Link, _PureComponent);\n\n  function Link() {\n    _classCallCheck(this, Link);\n\n    return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));\n  }\n\n  _createClass(Link, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          appearance = _props.appearance,\n          props = _objectWithoutProperties(_props, ['appearance']);\n\n      var appearanceStyle = LinkAppearances[appearance]; // Manage the color through the appearance\n\n      return React.createElement(Text, _extends({\n        is: 'a',\n        color: null,\n        css: appearanceStyle\n      }, props));\n    }\n  }]);\n\n  return Link;\n}(PureComponent);\n\nLink.propTypes = _extends({}, Text.propTypes, {\n  rel: PropTypes.string,\n  href: PropTypes.string,\n  target: PropTypes.string,\n  appearance: PropTypes.oneOf(Object.keys(LinkAppearances))\n});\nLink.defaultProps = {\n  appearance: 'blue'\n};\nexport default Link;","map":{"version":3,"sources":["../../../src/typography/src/Link.js"],"names":["Link","PureComponent","propTypes","Text","rel","PropTypes","string","href","target","appearance","Object","defaultProps","props","appearanceStyle","LinkAppearances"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,eAAA,MAAA,0BAAA;AACA,OAAA,IAAA,MAAA,QAAA;;IAEqBA,I;;;;;;;;;;;6BAaV;AAAA,UAAA,MAAA,GAC0B,KAD1B,KAAA;AAAA,UACCS,UADD,GAAA,MAAA,CAAA,UAAA;AAAA,UACgBG,KADhB,GAAA,wBAAA,CAAA,MAAA,EAAA,CAAA,YAAA,CAAA,CAAA;;AAEP,UAAMC,eAAAA,GAAkBC,eAAAA,CAAxB,UAAwBA,CAAxB,CAFO,CAIP;;AACA,aAAO,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;AAAM,QAAA,EAAA,EAAN,GAAA;AAAa,QAAA,KAAA,EAAb,IAAA;AAA0B,QAAA,GAAA,EAA1B;AAAA,OAAA,EAAP,KAAO,CAAA,CAAP;AACD;;;;EAnB+Bb,a;;AAAbD,I,CACZE,SADYF,G,aAEdG,IAAAA,CAAKD,S;AACRE,EAAAA,GAAAA,EAAKC,SAAAA,CAAUC,M;AACfC,EAAAA,IAAAA,EAAMF,SAAAA,CAAUC,M;AAChBE,EAAAA,MAAAA,EAAQH,SAAAA,CAAUC,M;AAClBG,EAAAA,UAAAA,EAAYJ,SAAAA,CAAAA,KAAAA,CAAgBK,MAAAA,CAAAA,IAAAA,CAAhBL,eAAgBK,CAAhBL;EANKL;AAAAA,I,CASZW,YATYX,GASG;AACpBS,EAAAA,UAAAA,EAAY;AADQ,CATHT;eAAAA,I","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport LinkAppearances from './styles/LinkAppearances'\nimport Text from './Text'\n\nexport default class Link extends PureComponent {\n  static propTypes = {\n    ...Text.propTypes,\n    rel: PropTypes.string,\n    href: PropTypes.string,\n    target: PropTypes.string,\n    appearance: PropTypes.oneOf(Object.keys(LinkAppearances))\n  }\n\n  static defaultProps = {\n    appearance: 'blue'\n  }\n\n  render() {\n    const { appearance, ...props } = this.props\n    const appearanceStyle = LinkAppearances[appearance]\n\n    // Manage the color through the appearance\n    return <Text is=\"a\" color={null} css={appearanceStyle} {...props} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}