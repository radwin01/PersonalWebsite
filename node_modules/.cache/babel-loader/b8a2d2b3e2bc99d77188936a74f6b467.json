{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Box, { dimensions, spacing, position, layout } from 'ui-box';\nimport FormFieldLabel from './FormFieldLabel';\nimport FormFieldDescription from './FormFieldDescription';\nimport FormFieldValidationMessage from './FormFieldValidationMessage';\n\nvar FormField = function (_PureComponent) {\n  _inherits(FormField, _PureComponent);\n\n  function FormField() {\n    _classCallCheck(this, FormField);\n\n    return _possibleConstructorReturn(this, (FormField.__proto__ || Object.getPrototypeOf(FormField)).apply(this, arguments));\n  }\n\n  _createClass(FormField, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          label = _props.label,\n          labelFor = _props.labelFor,\n          children = _props.children,\n          isRequired = _props.isRequired,\n          labelProps = _props.labelProps,\n          description = _props.description,\n          validationMessage = _props.validationMessage,\n          props = _objectWithoutProperties(_props, ['label', 'labelFor', 'children', 'isRequired', 'labelProps', 'description', 'validationMessage']);\n\n      return React.createElement(Box, props, React.createElement(FormFieldLabel, _extends({\n        htmlFor: labelFor,\n        isAstrixShown: isRequired,\n        marginBottom: 4\n      }, labelProps), label), children, validationMessage && React.createElement(FormFieldValidationMessage, null, validationMessage), description && React.createElement(FormFieldDescription, {\n        marginTop: 6\n      }, description));\n    }\n  }]);\n\n  return FormField;\n}(PureComponent);\n\nFormField.propTypes = _extends({\n  /**\n   * The label used above the input element.\n   */\n  label: PropTypes.node.isRequired,\n\n  /**\n   * Passed on the label as a htmlFor prop.\n   */\n  labelFor: PropTypes.string,\n\n  /**\n   * Wether or not show a asterix after the label.\n   */\n  isRequired: PropTypes.bool,\n\n  /**\n   * A optional description of the field under the input element.\n   */\n  description: PropTypes.node,\n\n  /**\n   * If a validation message is passed it is shown under the input element\n   * and above the description.\n   */\n  validationMessage: PropTypes.node\n}, dimensions.propTypes, spacing.propTypes, position.propTypes, layout.propTypes);\nFormField.defaultProps = {\n  labelProps: {\n    size: 400\n  }\n};\nexport default FormField;","map":{"version":3,"sources":["../../../src/form-field/src/FormField.js"],"names":["FormField","PureComponent","propTypes","label","PropTypes","isRequired","labelFor","string","bool","description","node","validationMessage","dimensions","spacing","position","layout","defaultProps","labelProps","size","children","props"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,GAAA,IAAA,UAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,QAAA,QAAA;AACA,OAAA,cAAA,MAAA,kBAAA;AACA,OAAA,oBAAA,MAAA,wBAAA;AACA,OAAA,0BAAA,MAAA,8BAAA;;IAEqBA,S;;;;;;;;;;;6BAuDV;AAAA,UAAA,MAAA,GAUH,KAVG,KAAA;AAAA,UAELG,KAFK,GAAA,MAAA,CAAA,KAAA;AAAA,UAGLG,QAHK,GAAA,MAAA,CAAA,QAAA;AAAA,UAILa,QAJK,GAAA,MAAA,CAAA,QAAA;AAAA,UAKLd,UALK,GAAA,MAAA,CAAA,UAAA;AAAA,UAMLY,UANK,GAAA,MAAA,CAAA,UAAA;AAAA,UAOLR,WAPK,GAAA,MAAA,CAAA,WAAA;AAAA,UAQLE,iBARK,GAAA,MAAA,CAAA,iBAAA;AAAA,UASFS,KATE,GAAA,wBAAA,CAAA,MAAA,EAAA,CAAA,OAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,aAAA,EAAA,mBAAA,CAAA,CAAA;;AAYP,aACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,QAAA,CAAA;AACE,QAAA,OAAA,EADF,QAAA;AAEE,QAAA,aAAA,EAFF,UAAA;AAGE,QAAA,YAAA,EAAc;AAHhB,OAAA,EAAA,UAAA,CAAA,EAMGjB,KANH,CADF,EAAA,QAAA,EAUGQ,iBAAAA,IACC,KAAA,CAAA,aAAA,CAAA,0BAAA,EAAA,IAAA,EACGA,iBADH,CAXJ,EAeGF,WAAAA,IACC,KAAA,CAAA,aAAA,CAAA,oBAAA,EAAA;AAAsB,QAAA,SAAA,EAAtB;AAAA,OAAA,EACGA,WADH,CAhBJ,CADF;AAuBD;;;;EA1FoCR,a;;AAAlBD,S,CACZE,SADYF,G;AAEjB;;;AAGAG,EAAAA,KAAAA,EAAOC,SAAAA,CAAAA,IAAAA,CAAeC,U;;AAEtB;;;AAGAC,EAAAA,QAAAA,EAAUF,SAAAA,CAAUG,M;;AAEpB;;;AAGAF,EAAAA,UAAAA,EAAYD,SAAAA,CAAUI,I;;AAEtB;;;AAGAC,EAAAA,WAAAA,EAAaL,SAAAA,CAAUM,I;;AAEvB;;;;AAIAC,EAAAA,iBAAAA,EAAmBP,SAAAA,CAAUM;GAK1BE,UAAAA,CAAWV,S,EAKXW,OAAAA,CAAQX,S,EAKRY,QAAAA,CAASZ,S,EAKTa,MAAAA,CAAOb,S,CA9COF;AAAAA,S,CAiDZgB,YAjDYhB,GAiDG;AACpBiB,EAAAA,UAAAA,EAAY;AACVC,IAAAA,IAAAA,EAAM;AADI;AADQ,CAjDHlB;eAAAA,S","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Box, { dimensions, spacing, position, layout } from 'ui-box'\nimport FormFieldLabel from './FormFieldLabel'\nimport FormFieldDescription from './FormFieldDescription'\nimport FormFieldValidationMessage from './FormFieldValidationMessage'\n\nexport default class FormField extends PureComponent {\n  static propTypes = {\n    /**\n     * The label used above the input element.\n     */\n    label: PropTypes.node.isRequired,\n\n    /**\n     * Passed on the label as a htmlFor prop.\n     */\n    labelFor: PropTypes.string,\n\n    /**\n     * Wether or not show a asterix after the label.\n     */\n    isRequired: PropTypes.bool,\n\n    /**\n     * A optional description of the field under the input element.\n     */\n    description: PropTypes.node,\n\n    /**\n     * If a validation message is passed it is shown under the input element\n     * and above the description.\n     */\n    validationMessage: PropTypes.node,\n\n    /**\n     * Composes the dimensions spec from the Box primitivie.\n     */\n    ...dimensions.propTypes,\n\n    /**\n     * Composes the spacing spec from the Box primitivie.\n     */\n    ...spacing.propTypes,\n\n    /**\n     * Composes the position spec from the Box primitivie.\n     */\n    ...position.propTypes,\n\n    /**\n     * Composes the layout spec from the Box primitivie.\n     */\n    ...layout.propTypes\n  }\n\n  static defaultProps = {\n    labelProps: {\n      size: 400\n    }\n  }\n\n  render() {\n    const {\n      label,\n      labelFor,\n      children,\n      isRequired,\n      labelProps,\n      description,\n      validationMessage,\n      ...props\n    } = this.props\n\n    return (\n      <Box {...props}>\n        <FormFieldLabel\n          htmlFor={labelFor}\n          isAstrixShown={isRequired}\n          marginBottom={4}\n          {...labelProps}\n        >\n          {label}\n        </FormFieldLabel>\n        {children}\n        {validationMessage && (\n          <FormFieldValidationMessage>\n            {validationMessage}\n          </FormFieldValidationMessage>\n        )}\n        {description && (\n          <FormFieldDescription marginTop={6}>\n            {description}\n          </FormFieldDescription>\n        )}\n      </Box>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}