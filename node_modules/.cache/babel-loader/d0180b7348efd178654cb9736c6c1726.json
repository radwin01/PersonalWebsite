{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport fuzzaldrin from 'fuzzaldrin-plus';\nimport VirtualList from 'react-tiny-virtual-list';\nimport { Pane } from '../../layers';\nimport { TableHead, SearchTableHeaderCell } from '../../table';\nimport OptionShapePropType from './OptionShapePropType';\nimport Option from './Option';\n/**\n * Fuzzaldrin-plus is the default filter, but you can use your own\n * as long as they follow the following signature:\n * @param options <Array[String]> - ['label', 'label2', ...]\n * @param input <String>\n */\n\nvar fuzzyFilter = function fuzzyFilter(options, input) {\n  return fuzzaldrin.filter(options, input);\n};\n/**\n * This is the default item renderer of options\n * you can pass custom renderers as long as they work the same as the Option\n */\n\n\nvar itemRenderer = function itemRenderer(props) {\n  return React.createElement(Option, props);\n};\n\nvar OptionsList = function (_PureComponent) {\n  _inherits(OptionsList, _PureComponent);\n\n  function OptionsList(props, context) {\n    _classCallCheck(this, OptionsList);\n\n    var _this = _possibleConstructorReturn(this, (OptionsList.__proto__ || Object.getPrototypeOf(OptionsList)).call(this, props, context));\n\n    _this.isSelected = function (item) {\n      var selected = _this.state.selected;\n      return Boolean(selected.find(function (selectedItem) {\n        return selectedItem === item.value;\n      }));\n    };\n\n    _this.search = function (options) {\n      var optionsFilter = _this.props.optionsFilter;\n      var searchValue = _this.state.searchValue;\n      return searchValue.trim() === '' ? options // Return if no search query\n      : optionsFilter(options.map(function (item) {\n        return item.labelInList || item.label;\n      }), searchValue).map(function (name) {\n        return options.find(function (item) {\n          return item.labelInList === name || item.label === name;\n        });\n      });\n    };\n\n    _this.handleChange = function (searchValue) {\n      _this.setState({\n        searchValue: searchValue\n      });\n    };\n\n    _this.handleSelect = function (item) {\n      _this.props.onSelect(item);\n    };\n\n    _this.assignSearchRef = function (ref) {\n      _this.searchRef = ref;\n    };\n\n    _this.state = {\n      searchValue: props.defaultSearchValue,\n      selected: props.selected\n    };\n    return _this;\n  }\n\n  _createClass(OptionsList, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var hasFilter = this.props.hasFilter;\n      if (!hasFilter) return;\n      /**\n       * Hacky solution for broken autoFocus\n       * https://github.com/segmentio/evergreen/issues/90\n       */\n\n      window.setTimeout(function () {\n        _this2.searchRef.querySelector('input').focus();\n      }, 1);\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.selected !== this.state.selected) {\n        this.setState({\n          selected: nextProps.selected\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          originalOptions = _props.options,\n          close = _props.close,\n          width = _props.width,\n          height = _props.height,\n          onSelect = _props.onSelect,\n          selected = _props.selected,\n          hasFilter = _props.hasFilter,\n          optionSize = _props.optionSize,\n          _renderItem = _props.renderItem,\n          placeholder = _props.placeholder,\n          optionsFilter = _props.optionsFilter,\n          defaultSearchValue = _props.defaultSearchValue,\n          props = _objectWithoutProperties(_props, ['options', 'close', 'width', 'height', 'onSelect', 'selected', 'hasFilter', 'optionSize', 'renderItem', 'placeholder', 'optionsFilter', 'defaultSearchValue']);\n\n      var options = this.search(originalOptions);\n      var listHeight = height - (hasFilter ? 32 : 0);\n      return React.createElement(Pane, _extends({\n        height: height,\n        width: width,\n        display: 'flex',\n        flexDirection: 'column'\n      }, props), hasFilter && React.createElement(TableHead, null, React.createElement(SearchTableHeaderCell, {\n        onChange: this.handleChange,\n        innerRef: this.assignSearchRef,\n        borderRight: null,\n        height: 32\n      })), React.createElement(Pane, {\n        flex: 1\n      }, React.createElement(VirtualList, {\n        height: listHeight,\n        width: '100%',\n        itemSize: optionSize,\n        itemCount: options.length,\n        overscanCount: 3,\n        scrollToAlignment: 'auto',\n        renderItem: function renderItem(_ref) {\n          var index = _ref.index,\n              style = _ref.style;\n          var item = options[index];\n          return _renderItem({\n            key: item.value,\n            label: item.label,\n            style: style,\n            height: optionSize,\n            onSelect: function onSelect() {\n              return _this3.handleSelect(item);\n            },\n            isSelected: _this3.isSelected(item)\n          });\n        }\n      })));\n    }\n  }]);\n\n  return OptionsList;\n}(PureComponent);\n\nOptionsList.propTypes = {\n  options: PropTypes.arrayOf(OptionShapePropType),\n  close: PropTypes.func,\n  height: PropTypes.number,\n  width: PropTypes.number,\n\n  /**\n   * This holds the values of the options\n   */\n  selected: PropTypes.arrayOf(PropTypes.string),\n  onSelect: PropTypes.func,\n  hasFilter: PropTypes.bool,\n  optionSize: PropTypes.number,\n  renderItem: PropTypes.func,\n  placeholder: PropTypes.string,\n  optionsFilter: PropTypes.func,\n  defaultSearchValue: PropTypes.string\n};\nOptionsList.defaultProps = {\n  options: [],\n\n  /**\n   * Including border bottom\n   * For some reason passing height to TableRow doesn't work\n   * TODO: fix hacky solution\n   */\n  optionSize: 33,\n  onSelect: function onSelect() {},\n  selected: [],\n  renderItem: itemRenderer,\n  optionsFilter: fuzzyFilter,\n  placeholder: 'Filter...',\n  defaultSearchValue: ''\n};\nexport default OptionsList;","map":{"version":3,"sources":["../../../src/select-menu/src/OptionsList.js"],"names":["fuzzyFilter","fuzzaldrin","itemRenderer","OptionsList","PureComponent","propTypes","options","PropTypes","close","height","width","selected","onSelect","hasFilter","optionSize","renderItem","placeholder","optionsFilter","defaultSearchValue","string","defaultProps","searchValue","props","window","nextProps","selectedItem","item","originalOptions","listHeight","index","style","key","label","isSelected"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport fuzzaldrin from 'fuzzaldrin-plus'\nimport VirtualList from 'react-tiny-virtual-list'\nimport { Pane } from '../../layers'\nimport { TableHead, SearchTableHeaderCell } from '../../table'\nimport OptionShapePropType from './OptionShapePropType'\nimport Option from './Option'\n\n/**\n * Fuzzaldrin-plus is the default filter, but you can use your own\n * as long as they follow the following signature:\n * @param options <Array[String]> - ['label', 'label2', ...]\n * @param input <String>\n */\nconst fuzzyFilter = (options, input) => fuzzaldrin.filter(options, input)\n\n/**\n * This is the default item renderer of options\n * you can pass custom renderers as long as they work the same as the Option\n */\nconst itemRenderer = props => <Option {...props} />\n\nexport default class OptionsList extends PureComponent {\n  static propTypes = {\n    options: PropTypes.arrayOf(OptionShapePropType),\n    close: PropTypes.func,\n    height: PropTypes.number,\n    width: PropTypes.number,\n\n    /**\n     * This holds the values of the options\n     */\n    selected: PropTypes.arrayOf(PropTypes.string),\n    onSelect: PropTypes.func,\n    hasFilter: PropTypes.bool,\n    optionSize: PropTypes.number,\n    renderItem: PropTypes.func,\n    placeholder: PropTypes.string,\n    optionsFilter: PropTypes.func,\n    defaultSearchValue: PropTypes.string\n  }\n\n  static defaultProps = {\n    options: [],\n    /**\n     * Including border bottom\n     * For some reason passing height to TableRow doesn't work\n     * TODO: fix hacky solution\n     */\n    optionSize: 33,\n    onSelect: () => {},\n    selected: [],\n    renderItem: itemRenderer,\n    optionsFilter: fuzzyFilter,\n    placeholder: 'Filter...',\n    defaultSearchValue: ''\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      searchValue: props.defaultSearchValue,\n      selected: props.selected\n    }\n  }\n\n  componentDidMount() {\n    const { hasFilter } = this.props\n    if (!hasFilter) return\n    /**\n     * Hacky solution for broken autoFocus\n     * https://github.com/segmentio/evergreen/issues/90\n     */\n    window.setTimeout(() => {\n      this.searchRef.querySelector('input').focus()\n    }, 1)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.selected !== this.state.selected) {\n      this.setState({\n        selected: nextProps.selected\n      })\n    }\n  }\n\n  isSelected = item => {\n    const { selected } = this.state\n\n    return Boolean(selected.find(selectedItem => selectedItem === item.value))\n  }\n\n  search = options => {\n    const { optionsFilter } = this.props\n    const { searchValue } = this.state\n\n    return searchValue.trim() === ''\n      ? options // Return if no search query\n      : optionsFilter(\n          options.map(item => item.labelInList || item.label),\n          searchValue\n        ).map(name =>\n          options.find(item => item.labelInList === name || item.label === name)\n        )\n  }\n\n  handleChange = searchValue => {\n    this.setState({\n      searchValue\n    })\n  }\n\n  handleSelect = item => {\n    this.props.onSelect(item)\n  }\n\n  assignSearchRef = ref => {\n    this.searchRef = ref\n  }\n\n  render() {\n    const {\n      options: originalOptions,\n      close,\n      width,\n      height,\n      onSelect,\n      selected,\n      hasFilter,\n      optionSize,\n      renderItem,\n      placeholder,\n      optionsFilter,\n      defaultSearchValue,\n      ...props\n    } = this.props\n    const options = this.search(originalOptions)\n    const listHeight = height - (hasFilter ? 32 : 0)\n\n    return (\n      <Pane\n        height={height}\n        width={width}\n        display=\"flex\"\n        flexDirection=\"column\"\n        {...props}\n      >\n        {hasFilter && (\n          <TableHead>\n            <SearchTableHeaderCell\n              onChange={this.handleChange}\n              innerRef={this.assignSearchRef}\n              borderRight={null}\n              height={32}\n            />\n          </TableHead>\n        )}\n        <Pane flex={1}>\n          <VirtualList\n            height={listHeight}\n            width=\"100%\"\n            itemSize={optionSize}\n            itemCount={options.length}\n            overscanCount={3}\n            scrollToAlignment=\"auto\"\n            renderItem={({ index, style }) => {\n              const item = options[index]\n              return renderItem({\n                key: item.value,\n                label: item.label,\n                style,\n                height: optionSize,\n                onSelect: () => this.handleSelect(item),\n                isSelected: this.isSelected(item)\n              })\n            }}\n          />\n        </Pane>\n      </Pane>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}