{"ast":null,"code":"var _extends2;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { colors } from '../../../colors';\nvar disabledState = '&[disabled] + div';\nvar hoverState = '&:not([disabled]):hover + div';\nvar focusState = '&:not([disabled]):focus + div';\nvar activeState = '&:not([disabled]):active + div';\nvar checkedState = '&:checked + div';\nvar checkedActiveState = '&:not([disabled]):checked:active + div';\nvar checkedDisabledState = '&[disabled]:checked + div';\nvar hiddenCheckboxStyle = {\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  height: '1',\n  overflow: 'hidden',\n  padding: '0',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1',\n  opacity: '0'\n};\nvar SwitchAppearances = {\n  default: _extends({}, hiddenCheckboxStyle, (_extends2 = {\n    '& + div > svg': {\n      display: 'none'\n    },\n    '& + div': {\n      transition: 'all 200ms ease-in-out',\n      cursor: 'pointer',\n      color: 'white',\n      boxSizing: 'border-box',\n      backgroundColor: colors.neutral['100A'],\n      borderRadius: 9999,\n      boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A']\n    }\n  }, _defineProperty(_extends2, disabledState, {\n    cursor: 'not-allowed',\n    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A'],\n    backgroundColor: colors.neutral['30A'],\n    backgroundImage: 'none'\n  }), _defineProperty(_extends2, hoverState, {\n    backgroundImage: 'linear-gradient(to top, ' + colors.neutral['7A'] + ', ' + colors.neutral['3A'] + ' )',\n    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['40A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['15A']\n  }), _defineProperty(_extends2, focusState, {\n    boxShadow: '0 0 0 3px ' + colors.blue['20A'] + ', inset 0 0 0 1px ' + colors.neutral['70A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A']\n  }), _defineProperty(_extends2, activeState, {\n    backgroundImage: 'none',\n    backgroundColor: colors.neutral['200A'] // BoxShadow: `inset 0 0 0 1px ${colors.blue['80A']}`,\n\n  }), _defineProperty(_extends2, checkedState, {\n    backgroundColor: colors.blue['500'],\n    color: 'white',\n    backgroundImage: 'linear-gradient(to top, ' + colors.blue['500'] + ', ' + colors.blue['600'] + ')',\n    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A'],\n    '& > svg': {\n      display: 'block'\n    }\n  }), _defineProperty(_extends2, checkedDisabledState, {\n    color: 'white',\n    backgroundColor: 'white',\n    backgroundImage: 'linear-gradient(to top, ' + colors.neutral['300'] + ', ' + colors.neutral['400'] + ')',\n    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['20A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['10A'],\n    '& > svg': {\n      display: 'block'\n    }\n  }), _defineProperty(_extends2, checkedActiveState, {\n    backgroundColor: colors.blue['500'],\n    color: 'white',\n    backgroundImage: 'linear-gradient(to top, ' + colors.blue['800'] + ', ' + colors.blue['900'] + ')',\n    boxShadow: 'inset 0 0 0 1px ' + colors.neutral['30A'] + ', inset 0 -1px 1px 0 ' + colors.neutral['30A'],\n    '& > svg': {\n      display: 'block'\n    }\n  }), _extends2))\n};\nexport default SwitchAppearances;","map":{"version":3,"sources":["../../../../src/switch/src/styles/SwitchAppearances.js"],"names":["disabledState","hoverState","focusState","activeState","checkedState","checkedActiveState","checkedDisabledState","hiddenCheckboxStyle","border","clip","height","overflow","padding","position","whiteSpace","width","opacity","SwitchAppearances","default","display","transition","cursor","color","boxSizing","backgroundColor","colors","borderRadius","boxShadow","backgroundImage"],"mappings":"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","sourcesContent":["import { colors } from '../../../colors'\n\nconst disabledState = '&[disabled] + div'\nconst hoverState = '&:not([disabled]):hover + div'\nconst focusState = '&:not([disabled]):focus + div'\nconst activeState = '&:not([disabled]):active + div'\nconst checkedState = '&:checked + div'\nconst checkedActiveState = '&:not([disabled]):checked:active + div'\nconst checkedDisabledState = '&[disabled]:checked + div'\n\nconst hiddenCheckboxStyle = {\n  border: '0',\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  height: '1',\n  overflow: 'hidden',\n  padding: '0',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  width: '1',\n  opacity: '0'\n}\n\nconst SwitchAppearances = {\n  default: {\n    ...hiddenCheckboxStyle,\n    '& + div > svg': {\n      display: 'none'\n    },\n    '& + div': {\n      transition: 'all 200ms ease-in-out',\n      cursor: 'pointer',\n      color: 'white',\n      boxSizing: 'border-box',\n      backgroundColor: colors.neutral['100A'],\n      borderRadius: 9999,\n      boxShadow: `inset 0 0 0 1px ${\n        colors.neutral['20A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['10A']}`\n    },\n    [disabledState]: {\n      cursor: 'not-allowed',\n      boxShadow: `inset 0 0 0 1px ${colors.neutral['20A']}`,\n      backgroundColor: colors.neutral['30A'],\n      backgroundImage: 'none'\n    },\n    [hoverState]: {\n      backgroundImage: `linear-gradient(to top, ${colors.neutral['7A']}, ${\n        colors.neutral['3A']\n      } )`,\n      boxShadow: `inset 0 0 0 1px ${\n        colors.neutral['40A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['15A']}`\n    },\n    [focusState]: {\n      boxShadow: `0 0 0 3px ${colors.blue['20A']}, inset 0 0 0 1px ${\n        colors.neutral['70A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['10A']}`\n    },\n    [activeState]: {\n      backgroundImage: 'none',\n      backgroundColor: colors.neutral['200A']\n      // BoxShadow: `inset 0 0 0 1px ${colors.blue['80A']}`,\n    },\n    [checkedState]: {\n      backgroundColor: colors.blue['500'],\n      color: 'white',\n      backgroundImage: `linear-gradient(to top, ${colors.blue['500']}, ${\n        colors.blue['600']\n      })`,\n      boxShadow: `inset 0 0 0 1px ${\n        colors.neutral['30A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['30A']}`,\n      '& > svg': {\n        display: 'block'\n      }\n    },\n    [checkedDisabledState]: {\n      color: 'white',\n      backgroundColor: 'white',\n      backgroundImage: `linear-gradient(to top, ${colors.neutral['300']}, ${\n        colors.neutral['400']\n      })`,\n      boxShadow: `inset 0 0 0 1px ${\n        colors.neutral['20A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['10A']}`,\n      '& > svg': {\n        display: 'block'\n      }\n    },\n    [checkedActiveState]: {\n      backgroundColor: colors.blue['500'],\n      color: 'white',\n      backgroundImage: `linear-gradient(to top, ${colors.blue['800']}, ${\n        colors.blue['900']\n      })`,\n      boxShadow: `inset 0 0 0 1px ${\n        colors.neutral['30A']\n      }, inset 0 -1px 1px 0 ${colors.neutral['30A']}`,\n      '& > svg': {\n        display: 'block'\n      }\n    }\n  }\n}\n\nexport default SwitchAppearances\n"]},"metadata":{},"sourceType":"module"}