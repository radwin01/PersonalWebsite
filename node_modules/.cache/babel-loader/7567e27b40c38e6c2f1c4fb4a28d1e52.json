{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.propEnhancers = exports.propValidators = exports.propAliases = exports.propTypes = undefined;\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _getCss = require('../get-css');\n\nvar _getCss2 = _interopRequireDefault(_getCss);\n\nvar _regex = require('../utils/regex');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar propTypes = exports.propTypes = {\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginBottom: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginLeft: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginRight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginTop: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginX: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  marginY: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  padding: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingBottom: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingLeft: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingRight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingTop: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingX: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n  paddingY: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])\n};\nvar propAliases = exports.propAliases = {\n  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n  marginX: ['marginLeft', 'marginRight'],\n  marginY: ['marginBottom', 'marginTop'],\n  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n  paddingX: ['paddingLeft', 'paddingRight'],\n  paddingY: ['paddingBottom', 'paddingTop']\n};\nvar propValidators = exports.propValidators = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  propValidators.margin = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return 'multiple values (\\u201C' + value + '\\u201D) aren\\u055At supported with \\u201Cmargin\\u201D. Use \\u201CmarginX\\u201D, \\u201CmarginY\\u201D \\u201CmarginBottom\\u201D, \\u201CmarginLeft\\u201D, \\u201CmarginRight\\u201D and \\u201CmarginTop\\u201D instead.';\n    }\n  };\n\n  propValidators.marginX = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return 'multiple values (\\u201C' + value + '\\u201D) aren\\u055At supported with \\u201CmarginX\\u201D. Use \\u201CmarginLeft\\u201D and \\u201CmarginRight\\u201D instead.';\n    }\n  };\n\n  propValidators.marginY = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return 'multiple values (\\u201C' + value + '\\u201D) aren\\u055At supported with \\u201CmarginY\\u201D. Use \\u201CmarginBottom\\u201D and \\u201CmarginTop\\u201D instead.';\n    }\n  };\n\n  propValidators.padding = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return 'multiple values (\\u201C' + value + '\\u201D) aren\\u055At supported with \\u201Cpadding\\u201D. Use \\u201CpaddingX\\u201D, \\u201CpaddingY\\u201D \\u201CpaddingBottom\\u201D, \\u201CpaddingLeft\\u201D, \\u201CpaddingRight\\u201D and \\u201CpaddingTop\\u201D instead.';\n    }\n  };\n\n  propValidators.paddingX = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return 'multiple values (\\u201C' + value + '\\u201D) aren\\u055At supported with \\u201CpaddingX\\u201D. Use \\u201CpaddingLeft\\u201D and \\u201CpaddingRight\\u201D instead.';\n    }\n  };\n\n  propValidators.paddingY = function (value) {\n    if (_regex.spacesOutsideParentheses.test(value)) {\n      return 'multiple values (\\u201C' + value + '\\u201D) aren\\u055At supported with \\u201CpaddingY\\u201D. Use \\u201CpaddingBottom\\u201D and \\u201CpaddingTop\\u201D instead.';\n    }\n  };\n}\n\nvar _marginTop = {\n  className: 'mt',\n  cssName: 'margin-top',\n  jsName: 'marginTop'\n};\nvar _marginRight = {\n  className: 'mr',\n  cssName: 'margin-right',\n  jsName: 'marginRight'\n};\nvar _marginBottom = {\n  className: 'mb',\n  cssName: 'margin-bottom',\n  jsName: 'marginBottom'\n};\nvar _marginLeft = {\n  className: 'ml',\n  cssName: 'margin-left',\n  jsName: 'marginLeft'\n};\nvar _paddingTop = {\n  className: 'pt',\n  cssName: 'padding-top',\n  jsName: 'paddingTop'\n};\nvar _paddingRight = {\n  className: 'pr',\n  cssName: 'padding-right',\n  jsName: 'paddingRight'\n};\nvar _paddingBottom = {\n  className: 'pb',\n  cssName: 'padding-bottom',\n  jsName: 'paddingBottom'\n};\nvar _paddingLeft = {\n  className: 'pl',\n  cssName: 'padding-left',\n  jsName: 'paddingLeft'\n};\nvar propEnhancers = exports.propEnhancers = {\n  marginBottom: function marginBottom(value) {\n    return (0, _getCss2.default)(_marginBottom, value);\n  },\n  marginLeft: function marginLeft(value) {\n    return (0, _getCss2.default)(_marginLeft, value);\n  },\n  marginRight: function marginRight(value) {\n    return (0, _getCss2.default)(_marginRight, value);\n  },\n  marginTop: function marginTop(value) {\n    return (0, _getCss2.default)(_marginTop, value);\n  },\n  paddingBottom: function paddingBottom(value) {\n    return (0, _getCss2.default)(_paddingBottom, value);\n  },\n  paddingLeft: function paddingLeft(value) {\n    return (0, _getCss2.default)(_paddingLeft, value);\n  },\n  paddingRight: function paddingRight(value) {\n    return (0, _getCss2.default)(_paddingRight, value);\n  },\n  paddingTop: function paddingTop(value) {\n    return (0, _getCss2.default)(_paddingTop, value);\n  }\n};","map":{"version":3,"sources":["../../src/enhancers/spacing.js"],"names":["propTypes","margin","PropTypes","marginBottom","marginLeft","marginRight","marginTop","marginX","marginY","padding","paddingBottom","paddingLeft","paddingRight","paddingTop","paddingX","paddingY","propAliases","propValidators","process","spacesOutsideParentheses","className","cssName","jsName","propEnhancers"],"mappings":";;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;;;;;;;AAEO,IAAMA,SAAAA,GAAAA,OAAAA,CAAAA,SAAAA,GAAY;AACvBC,EAAAA,MAAAA,EAAQC,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CADxB,MACK,CAApBA,CADe;AAEvBC,EAAAA,YAAAA,EAAcD,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAF9B,MAEW,CAApBA,CAFS;AAGvBE,EAAAA,UAAAA,EAAYF,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAH5B,MAGS,CAApBA,CAHW;AAIvBG,EAAAA,WAAAA,EAAaH,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAJ7B,MAIU,CAApBA,CAJU;AAKvBI,EAAAA,SAAAA,EAAWJ,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAL3B,MAKQ,CAApBA,CALY;AAMvBK,EAAAA,OAAAA,EAASL,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CANzB,MAMM,CAApBA,CANc;AAOvBM,EAAAA,OAAAA,EAASN,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAPzB,MAOM,CAApBA,CAPc;AAQvBO,EAAAA,OAAAA,EAASP,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CARzB,MAQM,CAApBA,CARc;AASvBQ,EAAAA,aAAAA,EAAeR,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAT/B,MASY,CAApBA,CATQ;AAUvBS,EAAAA,WAAAA,EAAaT,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAV7B,MAUU,CAApBA,CAVU;AAWvBU,EAAAA,YAAAA,EAAcV,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAX9B,MAWW,CAApBA,CAXS;AAYvBW,EAAAA,UAAAA,EAAYX,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAZ5B,MAYS,CAApBA,CAZW;AAavBY,EAAAA,QAAAA,EAAUZ,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAb1B,MAaO,CAApBA,CAba;AAcvBa,EAAAA,QAAAA,EAAUb,WAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAoB,CAACA,WAAAA,CAAAA,OAAAA,CAAD,MAAA,EAAmBA,WAAAA,CAAAA,OAAAA,CAAvCA,MAAoB,CAApBA;AAda,CAAlB;AAiBA,IAAMc,WAAAA,GAAAA,OAAAA,CAAAA,WAAAA,GAAc;AACzBf,EAAAA,MAAAA,EAAQ,CAAA,cAAA,EAAA,YAAA,EAAA,aAAA,EADiB,WACjB,CADiB;AAEzBM,EAAAA,OAAAA,EAAS,CAAA,YAAA,EAFgB,aAEhB,CAFgB;AAGzBC,EAAAA,OAAAA,EAAS,CAAA,cAAA,EAHgB,WAGhB,CAHgB;AAIzBC,EAAAA,OAAAA,EAAS,CAAA,eAAA,EAAA,aAAA,EAAA,cAAA,EAJgB,YAIhB,CAJgB;AAKzBK,EAAAA,QAAAA,EAAU,CAAA,aAAA,EALe,cAKf,CALe;AAMzBC,EAAAA,QAAAA,EAAU,CAAA,eAAA,EAAA,YAAA;AANe,CAApB;AASA,IAAME,cAAAA,GAAAA,OAAAA,CAAAA,cAAAA,GAAN,EAAA;;AAEP,IAAIC,OAAAA,CAAAA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AACzCD,EAAAA,cAAAA,CAAAA,MAAAA,GAAwB,UAAA,KAAA,EAAS;AAC/B,QAAIE,MAAAA,CAAAA,wBAAAA,CAAAA,IAAAA,CAAJ,KAAIA,CAAJ,EAA0C;AACxC,aAAA,4BAAA,KAAA,GAAA,kNAAA;AACD;AAHHF,GAAAA;;AAKAA,EAAAA,cAAAA,CAAAA,OAAAA,GAAyB,UAAA,KAAA,EAAS;AAChC,QAAIE,MAAAA,CAAAA,wBAAAA,CAAAA,IAAAA,CAAJ,KAAIA,CAAJ,EAA0C;AACxC,aAAA,4BAAA,KAAA,GAAA,yHAAA;AACD;AAHHF,GAAAA;;AAKAA,EAAAA,cAAAA,CAAAA,OAAAA,GAAyB,UAAA,KAAA,EAAS;AAChC,QAAIE,MAAAA,CAAAA,wBAAAA,CAAAA,IAAAA,CAAJ,KAAIA,CAAJ,EAA0C;AACxC,aAAA,4BAAA,KAAA,GAAA,yHAAA;AACD;AAHHF,GAAAA;;AAKAA,EAAAA,cAAAA,CAAAA,OAAAA,GAAyB,UAAA,KAAA,EAAS;AAChC,QAAIE,MAAAA,CAAAA,wBAAAA,CAAAA,IAAAA,CAAJ,KAAIA,CAAJ,EAA0C;AACxC,aAAA,4BAAA,KAAA,GAAA,yNAAA;AACD;AAHHF,GAAAA;;AAKAA,EAAAA,cAAAA,CAAAA,QAAAA,GAA0B,UAAA,KAAA,EAAS;AACjC,QAAIE,MAAAA,CAAAA,wBAAAA,CAAAA,IAAAA,CAAJ,KAAIA,CAAJ,EAA0C;AACxC,aAAA,4BAAA,KAAA,GAAA,4HAAA;AACD;AAHHF,GAAAA;;AAKAA,EAAAA,cAAAA,CAAAA,QAAAA,GAA0B,UAAA,KAAA,EAAS;AACjC,QAAIE,MAAAA,CAAAA,wBAAAA,CAAAA,IAAAA,CAAJ,KAAIA,CAAJ,EAA0C;AACxC,aAAA,4BAAA,KAAA,GAAA,4HAAA;AACD;AAHHF,GAAAA;AAKD;;AAED,IAAMX,UAAAA,GAAY;AAChBc,EAAAA,SAAAA,EADgB,IAAA;AAEhBC,EAAAA,OAAAA,EAFgB,YAAA;AAGhBC,EAAAA,MAAAA,EAAQ;AAHQ,CAAlB;AAKA,IAAMjB,YAAAA,GAAc;AAClBe,EAAAA,SAAAA,EADkB,IAAA;AAElBC,EAAAA,OAAAA,EAFkB,cAAA;AAGlBC,EAAAA,MAAAA,EAAQ;AAHU,CAApB;AAKA,IAAMnB,aAAAA,GAAe;AACnBiB,EAAAA,SAAAA,EADmB,IAAA;AAEnBC,EAAAA,OAAAA,EAFmB,eAAA;AAGnBC,EAAAA,MAAAA,EAAQ;AAHW,CAArB;AAKA,IAAMlB,WAAAA,GAAa;AACjBgB,EAAAA,SAAAA,EADiB,IAAA;AAEjBC,EAAAA,OAAAA,EAFiB,aAAA;AAGjBC,EAAAA,MAAAA,EAAQ;AAHS,CAAnB;AAKA,IAAMT,WAAAA,GAAa;AACjBO,EAAAA,SAAAA,EADiB,IAAA;AAEjBC,EAAAA,OAAAA,EAFiB,aAAA;AAGjBC,EAAAA,MAAAA,EAAQ;AAHS,CAAnB;AAKA,IAAMV,aAAAA,GAAe;AACnBQ,EAAAA,SAAAA,EADmB,IAAA;AAEnBC,EAAAA,OAAAA,EAFmB,eAAA;AAGnBC,EAAAA,MAAAA,EAAQ;AAHW,CAArB;AAKA,IAAMZ,cAAAA,GAAgB;AACpBU,EAAAA,SAAAA,EADoB,IAAA;AAEpBC,EAAAA,OAAAA,EAFoB,gBAAA;AAGpBC,EAAAA,MAAAA,EAAQ;AAHY,CAAtB;AAKA,IAAMX,YAAAA,GAAc;AAClBS,EAAAA,SAAAA,EADkB,IAAA;AAElBC,EAAAA,OAAAA,EAFkB,cAAA;AAGlBC,EAAAA,MAAAA,EAAQ;AAHU,CAApB;AAMO,IAAMC,aAAAA,GAAAA,OAAAA,CAAAA,aAAAA,GAAgB;AAC3BpB,EAAAA,YAAAA,EAAc,SAAA,YAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,aAAA,EAAT,KAAS,CAAT;AADa,GAAA;AAE3BC,EAAAA,UAAAA,EAAY,SAAA,UAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,WAAA,EAAT,KAAS,CAAT;AAFe,GAAA;AAG3BC,EAAAA,WAAAA,EAAa,SAAA,WAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,YAAA,EAAT,KAAS,CAAT;AAHc,GAAA;AAI3BC,EAAAA,SAAAA,EAAW,SAAA,SAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,UAAA,EAAT,KAAS,CAAT;AAJgB,GAAA;AAK3BI,EAAAA,aAAAA,EAAe,SAAA,aAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,cAAA,EAAT,KAAS,CAAT;AALY,GAAA;AAM3BC,EAAAA,WAAAA,EAAa,SAAA,WAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,YAAA,EAAT,KAAS,CAAT;AANc,GAAA;AAO3BC,EAAAA,YAAAA,EAAc,SAAA,YAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,aAAA,EAAT,KAAS,CAAT;AAPa,GAAA;AAQ3BC,EAAAA,UAAAA,EAAY,SAAA,UAAA,CAAA,KAAA,EAAA;AAAA,WAAS,CAAA,GAAA,QAAA,CAAA,OAAA,EAAA,WAAA,EAAT,KAAS,CAAT;AAAA;AARe,CAAtB","sourcesContent":["import PropTypes from 'prop-types'\nimport getCss from '../get-css'\nimport {spacesOutsideParentheses} from '../utils/regex'\n\nexport const propTypes = {\n  margin: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  marginBottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  marginLeft: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  marginRight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  marginTop: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  marginX: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  marginY: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  padding: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  paddingBottom: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  paddingLeft: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  paddingRight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  paddingTop: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  paddingX: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  paddingY: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n}\n\nexport const propAliases = {\n  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],\n  marginX: ['marginLeft', 'marginRight'],\n  marginY: ['marginBottom', 'marginTop'],\n  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],\n  paddingX: ['paddingLeft', 'paddingRight'],\n  paddingY: ['paddingBottom', 'paddingTop']\n}\n\nexport const propValidators = {}\n\nif (process.env.NODE_ENV !== 'production') {\n  propValidators.margin = value => {\n    if (spacesOutsideParentheses.test(value)) {\n      return `multiple values (“${value}”) aren՚t supported with “margin”. Use “marginX”, “marginY” “marginBottom”, “marginLeft”, “marginRight” and “marginTop” instead.`\n    }\n  }\n  propValidators.marginX = value => {\n    if (spacesOutsideParentheses.test(value)) {\n      return `multiple values (“${value}”) aren՚t supported with “marginX”. Use “marginLeft” and “marginRight” instead.`\n    }\n  }\n  propValidators.marginY = value => {\n    if (spacesOutsideParentheses.test(value)) {\n      return `multiple values (“${value}”) aren՚t supported with “marginY”. Use “marginBottom” and “marginTop” instead.`\n    }\n  }\n  propValidators.padding = value => {\n    if (spacesOutsideParentheses.test(value)) {\n      return `multiple values (“${value}”) aren՚t supported with “padding”. Use “paddingX”, “paddingY” “paddingBottom”, “paddingLeft”, “paddingRight” and “paddingTop” instead.`\n    }\n  }\n  propValidators.paddingX = value => {\n    if (spacesOutsideParentheses.test(value)) {\n      return `multiple values (“${value}”) aren՚t supported with “paddingX”. Use “paddingLeft” and “paddingRight” instead.`\n    }\n  }\n  propValidators.paddingY = value => {\n    if (spacesOutsideParentheses.test(value)) {\n      return `multiple values (“${value}”) aren՚t supported with “paddingY”. Use “paddingBottom” and “paddingTop” instead.`\n    }\n  }\n}\n\nconst marginTop = {\n  className: 'mt',\n  cssName: 'margin-top',\n  jsName: 'marginTop'\n}\nconst marginRight = {\n  className: 'mr',\n  cssName: 'margin-right',\n  jsName: 'marginRight'\n}\nconst marginBottom = {\n  className: 'mb',\n  cssName: 'margin-bottom',\n  jsName: 'marginBottom'\n}\nconst marginLeft = {\n  className: 'ml',\n  cssName: 'margin-left',\n  jsName: 'marginLeft'\n}\nconst paddingTop = {\n  className: 'pt',\n  cssName: 'padding-top',\n  jsName: 'paddingTop'\n}\nconst paddingRight = {\n  className: 'pr',\n  cssName: 'padding-right',\n  jsName: 'paddingRight'\n}\nconst paddingBottom = {\n  className: 'pb',\n  cssName: 'padding-bottom',\n  jsName: 'paddingBottom'\n}\nconst paddingLeft = {\n  className: 'pl',\n  cssName: 'padding-left',\n  jsName: 'paddingLeft'\n}\n\nexport const propEnhancers = {\n  marginBottom: value => getCss(marginBottom, value),\n  marginLeft: value => getCss(marginLeft, value),\n  marginRight: value => getCss(marginRight, value),\n  marginTop: value => getCss(marginTop, value),\n  paddingBottom: value => getCss(paddingBottom, value),\n  paddingLeft: value => getCss(paddingLeft, value),\n  paddingRight: value => getCss(paddingRight, value),\n  paddingTop: value => getCss(paddingTop, value)\n}\n"]},"metadata":{},"sourceType":"script"}